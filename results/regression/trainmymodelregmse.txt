training: 13195 , validation: 16965
1885
Training and Testing my model
1.2.0
Net(
  (conv1): Conv2d(4, 128, kernel_size=(2, 2), stride=(2, 2))
  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (conv2): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (conv2_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (fc1): Linear(in_features=262144, out_features=4096, bias=True)
  (fc1_bn): BatchNorm1d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (fc2): Linear(in_features=4096, out_features=1, bias=True)
)
12
torch.Size([128, 4, 2, 2])
MSE loss, Adam optimizer, lr = 0.001
[1,     1] loss: 1.192
[1,   506] loss: 0.238
[2,     1] loss: 0.014
[2,   506] loss: 0.017
[3,     1] loss: 0.021
[3,   506] loss: 0.017
[4,     1] loss: 0.003
[4,   506] loss: 0.021
[5,     1] loss: 0.002
[5,   506] loss: 0.011
[6,     1] loss: 0.011
[6,   506] loss: 0.012
[7,     1] loss: 0.002
[7,   506] loss: 0.012
[8,     1] loss: 0.010
[8,   506] loss: 0.010
[9,     1] loss: 0.005
[9,   506] loss: 0.013
[10,     1] loss: 0.007
[10,   506] loss: 0.005
[11,     1] loss: 0.005
[11,   506] loss: 0.004
[12,     1] loss: 0.001
[12,   506] loss: 0.003
[13,     1] loss: 0.001
[13,   506] loss: 0.003
[14,     1] loss: 0.004
[14,   506] loss: 0.003
[15,     1] loss: 0.001
[15,   506] loss: 0.002
[16,     1] loss: 0.001
[16,   506] loss: 0.001
[17,     1] loss: 0.001
[17,   506] loss: 0.001
[18,     1] loss: 0.000
[18,   506] loss: 0.001
[19,     1] loss: 0.000
[19,   506] loss: 0.001
[20,     1] loss: 0.001
[20,   506] loss: 0.001
[21,     1] loss: 0.000
[21,   506] loss: 0.001
[22,     1] loss: 0.001
[22,   506] loss: 0.000
[23,     1] loss: 0.000
[23,   506] loss: 0.000
[24,     1] loss: 0.001
[24,   506] loss: 0.000
[25,     1] loss: 0.000
[25,   506] loss: 0.000
[26,     1] loss: 0.000
[26,   506] loss: 0.000
[27,     1] loss: 0.000
[27,   506] loss: 0.000
[28,     1] loss: 0.000
[28,   506] loss: 0.000
[29,     1] loss: 0.000
[29,   506] loss: 0.000
[30,     1] loss: 0.000
[30,   506] loss: 0.000
[31,     1] loss: 0.001
[31,   506] loss: 0.000
[32,     1] loss: 0.000
[32,   506] loss: 0.000
[33,     1] loss: 0.000
[33,   506] loss: 0.001
[34,     1] loss: 0.000
[34,   506] loss: 0.000
[35,     1] loss: 0.000
[35,   506] loss: 0.000
[36,     1] loss: 0.000
[36,   506] loss: 0.000
[37,     1] loss: 0.000
[37,   506] loss: 0.000
[38,     1] loss: 0.000
[38,   506] loss: 0.000
[39,     1] loss: 0.000
[39,   506] loss: 0.000
[40,     1] loss: 0.000
[40,   506] loss: 0.000
[41,     1] loss: 0.000
[41,   506] loss: 0.000
[42,     1] loss: 0.000
[42,   506] loss: 0.000
[43,     1] loss: 0.000
[43,   506] loss: 0.000
[44,     1] loss: 0.000
[44,   506] loss: 0.000
[45,     1] loss: 0.000
[45,   506] loss: 0.000
[46,     1] loss: 0.000
[46,   506] loss: 0.000
[47,     1] loss: 0.000
[47,   506] loss: 0.000
[48,     1] loss: 0.000
[48,   506] loss: 0.000
[49,     1] loss: 0.000
[49,   506] loss: 0.000
[50,     1] loss: 0.000
[50,   506] loss: 0.000
Training time: 5212m 4s
Testing predicted: [array([0.96545742]), array([0.78843469]), array([0.92434569]), array([0.85245035]), array([0.84859757]), array([0.93312791]), array([0.957278]), array([0.8969812]), array([0.87177837]), array([0.92917983]), array([0.92324204]), array([0.92988103]), array([0.86909379]), array([0.94508183]), array([0.95726927]), array([0.93124399]), array([0.94854489]), array([0.95531958]), array([0.93166104]), array([0.93630172]), array([0.89882976]), array([0.85503599]), array([0.93177464]), array([0.84847965]), array([0.92866636]), array([0.78927699]), array([0.94683544]), array([0.65430982]), array([0.91676466]), array([0.80957348]), array([0.8399734]), array([0.93799843]), array([0.91053499]), array([0.8602002]), array([0.92629822]), array([0.91014275]), array([0.78427915]), array([0.87521178]), array([0.92571647]), array([0.89718529]), array([0.92909424]), array([0.50917211]), array([0.8746449]), array([0.91252889]), array([0.94618421]), array([0.94317822]), array([0.96107362]), array([0.93720225]), array([0.92748375]), array([0.9326804]), array([0.95238797]), array([0.79598265]), array([0.89831512]), array([0.92416144]), array([0.86222755]), array([0.72071459]), array([0.94086013]), array([0.92234878]), array([0.7042969]), array([0.95451865]), array([0.94754244]), array([0.90461572]), array([0.89179868]), array([0.85449595]), array([0.71451583]), array([0.95597851]), array([0.95142502]), array([0.90478605]), array([0.95546955]), array([0.92633864]), array([0.66557133]), array([0.70714989]), array([0.9301214]), array([0.92422494]), array([0.96179187]), array([0.91864412]), array([0.9473254]), array([0.96033105]), array([0.90737409]), array([0.92485785]), array([0.93440594]), array([0.91301701]), array([0.92876344]), array([0.95018139]), array([0.93096017]), array([0.95300046]), array([0.52501043]), array([0.93686655]), array([0.95659158]), array([0.91035684]), array([0.95328844]), array([0.47409709]), array([0.85831668]), array([0.9664412]), array([0.91088981]), array([0.92791308]), array([0.85871827]), array([0.89057281]), array([0.50038232]), array([0.90808957]), array([0.95679647]), array([0.94652269]), array([0.87351119]), array([0.46762868]), array([0.93382212]), array([0.90795675]), array([0.9295341]), array([0.89016477]), array([0.91348089]), array([0.90841366]), array([0.95264493]), array([0.95604372]), array([0.96148407]), array([0.84270009]), array([0.90065045]), array([0.50314332]), array([0.95588513]), array([0.85095666]), array([0.90635153]), array([0.9658625]), array([0.93092731]), array([0.94487309]), array([0.69718499]), array([0.90535519]), array([0.85673414]), array([0.87029097]), array([0.93102444]), array([0.93038346]), array([0.90604349]), array([0.85008887]), array([0.94701934]), array([0.95361795]), array([0.93088361]), array([0.89415647]), array([0.94706384]), array([0.66450559]), array([0.86476624]), array([0.9511737]), array([0.93743068]), array([0.95594654]), array([0.88940404]), array([0.96521137]), array([0.92856011]), array([0.92197725]), array([0.84844901]), array([0.92792744]), array([0.96245224]), array([0.48645659]), array([0.91318084]), array([0.79413595]), array([0.89296525]), array([0.95774448]), array([0.92224904]), array([0.95845645]), array([0.73209947]), array([0.92569352]), array([0.95553975]), array([0.95024177]), array([0.92716923]), array([0.90622012]), array([0.92829549]), array([0.90028914]), array([0.95353614]), array([0.91786517]), array([0.6559756]), array([0.9494766]), array([0.81739787]), array([0.91604662]), array([0.87534353]), array([0.93498743]), array([0.92697684]), array([0.90033977]), array([0.95771951]), array([0.87596043]), array([0.94840075]), array([0.70359453]), array([0.9261128]), array([0.95268682]), array([0.959609]), array([0.92206745]), array([0.96269171]), array([0.9437434]), array([0.95064006]), array([0.51684133]), array([0.96158042]), array([0.87130578]), array([0.93522347]), array([0.93509149]), array([0.96235656]), array([0.65175516]), array([0.93155433]), array([0.91038083]), array([0.95237597]), array([0.88337682]), array([0.94568156]), array([0.86624424]), array([0.65948095]), array([0.9352446]), array([0.95164182]), array([0.94384979]), array([0.93983166]), array([0.93598167]), array([0.94890717]), array([0.6523323]), array([0.9610758]), array([0.90584853]), array([0.94396845]), array([0.95803099]), array([0.71838594]), array([0.9098207]), array([0.94503881]), array([0.92816299]), array([0.85249062]), array([0.96009364]), array([0.94233623]), array([0.96465453]), array([0.49279972]), array([0.96025892]), array([0.94634897]), array([0.85164354]), array([0.86541621]), array([0.9005123]), array([0.71498748]), array([0.96032801]), array([0.95160286]), array([0.78142732]), array([0.93882792]), array([0.92839502]), array([0.86345505]), array([0.94597198]), array([0.96293616]), array([0.65692063]), array([0.79181394]), array([0.92538404]), array([0.8901181]), array([0.90798475]), array([0.66677196]), array([0.96774214]), array([0.93513216]), array([0.92876584]), array([0.92365058]), array([0.94616333]), array([0.94756394]), array([0.92793403]), array([0.90307891]), array([0.94724805]), array([0.93253881]), array([0.96485267]), array([0.78834457]), array([0.95377991]), array([0.85974147]), array([0.95898911]), array([0.91546933]), array([0.95844711]), array([0.95453965]), array([0.89304572]), array([0.89122077]), array([0.95117074]), array([0.92499826]), array([0.86738315]), array([0.65742345]), array([0.92076129]), array([0.95994635]), array([0.91473601]), array([0.93333659]), array([0.91995291]), array([0.93849067]), array([0.94702963]), array([0.95602521]), array([0.91025073]), array([0.94313969]), array([0.93470412]), array([0.92933438]), array([0.90007758]), array([0.85601071]), array([0.93164219]), array([0.92788554]), array([0.85675455]), array([0.93589612]), array([0.92734034]), array([0.7864381]), array([0.78003635]), array([0.52914051]), array([0.85523208]), array([0.91220557]), array([0.94471079]), array([0.87117882]), array([0.86414823]), array([0.95283321]), array([0.94603177]), array([0.9302215]), array([0.95767121]), array([0.92081466]), array([0.90415268]), array([0.72307112]), array([0.94785048]), array([0.94663334]), array([0.90058141]), array([0.86225968]), array([0.91638378]), array([0.48691486]), array([0.51266759]), array([0.85310788]), array([0.78616489]), array([0.93899715]), array([0.94822359]), array([0.95704628]), array([0.94608887]), array([0.90950272]), array([0.94000954]), array([0.71173841]), array([0.90389229]), array([0.93030188]), array([0.96031842]), array([0.91224748]), array([0.70175465]), array([0.86492586]), array([0.85666799]), array([0.94878766]), array([0.666354]), array([0.94770752]), array([0.48793948]), array([0.94716728]), array([0.94738507]), array([0.89605777]), array([0.70936868]), array([0.96861142]), array([0.85095073]), array([0.92967042]), array([0.95092276]), array([0.93258896]), array([0.80213663]), array([0.79213053]), array([0.49661905]), array([0.9617895]), array([0.92762032]), array([0.92920788]), array([0.85154898]), array([0.94293849]), array([0.93824302]), array([0.92734585]), array([0.93030782]), array([0.90066072]), array([0.95852254]), array([0.93816773]), array([0.93491621]), array([0.93157616]), array([0.95972226]), array([0.95991238]), array([0.93841949]), array([0.85818932]), array([0.70457195]), array([0.84609479]), array([0.79971954]), array([0.71465072]), array([0.73974902]), array([0.9272884]), array([0.89251611]), array([0.96503525]), array([0.94835246]), array([0.90348069]), array([0.90293623]), array([0.92964086]), array([0.92197623]), array([0.94867421]), array([0.90731363]), array([0.95247685]), array([0.88934314]), array([0.92082395]), array([0.95086474]), array([0.92046756]), array([0.87294612]), array([0.94347412]), array([0.91263493]), array([0.86234302]), array([0.96107957]), array([0.937162]), array([0.87600624]), array([0.89030097]), array([0.94724514]), array([0.90463426]), array([0.78606181]), array([0.87138745]), array([0.70930022]), array([0.48017733]), array([0.70605076]), array([0.93309164]), array([0.94258156]), array([0.89363961]), array([0.86311186]), array([0.78678067]), array([0.92765496]), array([0.94679487]), array([0.92219809]), array([0.96502403]), array([0.71526432]), array([0.65811751]), array([0.92570854]), array([0.92842333]), array([0.94813699]), array([0.94224019]), array([0.87293114]), array([0.86643952]), array([0.93034313]), array([0.83578313]), array([0.90686314]), array([0.92766045]), array([0.92918895]), array([0.94494486]), array([0.65817697]), array([0.91932219]), array([0.94936523]), array([0.86715275]), array([0.8680111]), array([0.70621313]), array([0.86182922]), array([0.89783315]), array([0.92245703]), array([0.92890343]), array([0.85667873]), array([0.48790433]), array([0.93151501]), array([0.89175288]), array([0.94456181]), array([0.93873958]), array([0.97173234]), array([0.86424668]), array([0.93084476]), array([0.92100598]), array([0.95859273]), array([0.95656579]), array([0.90973565]), array([0.94520755]), array([0.88381539]), array([0.80528616]), array([0.92984058]), array([0.92386338]), array([0.66180961]), array([0.95324144]), array([0.94482299]), array([0.90328108]), array([0.94444981]), array([0.85657104]), array([0.90707751]), array([0.94718947]), array([0.96751507]), array([0.89512586]), array([0.93241692]), array([0.66282823]), array([0.89936148]), array([0.94099838]), array([0.66395661]), array([0.91735748]), array([0.9493985]), array([0.96181953]), array([0.9423094]), array([0.95882909]), array([0.92005755]), array([0.96718271]), array([0.49928287]), array([0.9431418]), array([0.91144649]), array([0.92670023]), array([0.94331786]), array([0.92664104]), array([0.91982679]), array([0.93733097]), array([0.93671427]), array([0.93586585]), array([0.70224727]), array([0.96141328]), array([0.95820092]), array([0.90271002]), array([0.94327292]), array([0.91381412]), array([0.94731491]), array([0.94728364]), array([0.72152846]), array([0.92228264]), array([0.95774307]), array([0.93386551]), array([0.95051928]), array([0.85222245]), array([0.87569968]), array([0.94286937]), array([0.80768478]), array([0.91509184]), array([0.86084079]), array([0.93495914]), array([0.94780223]), array([0.94827689]), array([0.92901105]), array([0.96661812]), array([0.65445988]), array([0.93002071]), array([0.95720205]), array([0.95064511]), array([0.91915928]), array([0.66340132]), array([0.663645]), array([0.96092198]), array([0.92893163]), array([0.50710774]), array([0.94808302]), array([0.92345662]), array([0.86881756]), array([0.92711076]), array([0.93753383]), array([0.85312585]), array([0.92798403]), array([0.93034367]), array([0.95057685]), array([0.79932829]), array([0.85720336]), array([0.93259636]), array([0.93334895]), array([0.95893988]), array([0.85486104]), array([0.90225507]), array([0.94375097]), array([0.92806685]), array([0.93512906]), array([0.79095145]), array([0.66594327]), array([0.50895206]), array([0.96856384]), array([0.92442588]), array([0.90293368]), array([0.89677783]), array([0.95108189]), array([0.8082294]), array([0.951007]), array([0.90409419]), array([0.90759194]), array([0.93224357]), array([0.9270379]), array([0.9167113]), array([0.53042642]), array([0.95144987]), array([0.94104905]), array([0.88923865]), array([0.79613666]), array([0.78451645]), array([0.48991017]), array([0.93320044]), array([0.94465564]), array([0.71399471]), array([0.94666212]), array([0.78303763]), array([0.9469439]), array([0.95171429]), array([0.96024952]), array([0.78301595]), array([0.71225099]), array([0.86198318]), array([0.90611211]), array([0.9539463]), array([0.95495335]), array([0.96389661]), array([0.96033053]), array([0.95293176]), array([0.96178134]), array([0.95595626]), array([0.87785753]), array([0.84954399]), array([0.96264459]), array([0.79672828]), array([0.88991495]), array([0.95746464]), array([0.96180981]), array([0.78691288]), array([0.84347789]), array([0.8746919]), array([0.86897045]), array([0.91150078]), array([0.94639818]), array([0.93099586]), array([0.65173539]), array([0.92682034]), array([0.96498619]), array([0.96499971]), array([0.89912485]), array([0.95781601]), array([0.86075596]), array([0.85252319]), array([0.96007868]), array([0.91038033]), array([0.64982343]), array([0.72406738]), array([0.95685619]), array([0.92710186]), array([0.90127406]), array([0.92160717]), array([0.93588723]), array([0.93386227]), array([0.93662203]), array([0.92012224]), array([0.95419475]), array([0.85706027]), array([0.82767406]), array([0.94584297]), array([0.96385181]), array([0.9592535]), array([0.95134813]), array([0.93743127]), array([0.96659373]), array([0.95283182]), array([0.86058739]), array([0.91690523]), array([0.95847465]), array([0.9461262]), array([0.77999952]), array([0.94828106]), array([0.72906437]), array([0.9268992]), array([0.95700568]), array([0.93330411]), array([0.94989533]), array([0.94781198]), array([0.92485139]), array([0.92680256]), array([0.94361859]), array([0.9033916]), array([0.92614211]), array([0.96258381]), array([0.94716676]), array([0.88978129]), array([0.95202291]), array([0.89089051]), array([0.4956816]), array([0.94526085]), array([0.94426966]), array([0.94503335]), array([0.86220437]), array([0.85364426]), array([0.78330276]), array([0.90103383]), array([0.4766682]), array([0.88453598]), array([0.70335346]), array([0.95392432]), array([0.84823457]), array([0.95569199]), array([0.93731544]), array([0.9346239]), array([0.78602317]), array([0.90675959]), array([0.93167235]), array([0.85674707]), array([0.90705508]), array([0.92248328]), array([0.49070784]), array([0.95812205]), array([0.89739914]), array([0.94456132]), array([0.92068692]), array([0.70489152]), array([0.49041497]), array([0.69818761]), array([0.80390376]), array([0.89482173]), array([0.93102195]), array([0.97054682]), array([0.89721663]), array([0.92971915]), array([0.96468136]), array([0.91764741]), array([0.93960979]), array([0.91287083]), array([0.96249468]), array([0.9117789]), array([0.89236479]), array([0.96432363]), array([0.93918968]), array([0.95754241]), array([0.94098164]), array([0.91189846]), array([0.81188505]), array([0.95334308]), array([0.95819572]), array([0.94282326]), array([0.8078751]), array([0.93284293]), array([0.95997407]), array([0.78857284]), array([0.92674311]), array([0.48390987]), array([0.71094781]), array([0.47783377]), array([0.89518808]), array([0.954709]), array([0.95022995]), array([0.88573674]), array([0.87267027]), array([0.65468212]), array([0.96059025]), array([0.95448375]), array([0.79600377]), array([0.94425813]), array([0.92621039]), array([0.50496884]), array([0.85371269]), array([0.9466304]), array([0.93004067]), array([0.94163256]), array([0.77995173]), array([0.93334073]), array([0.92837321]), array([0.81511618]), array([0.85571893]), array([0.9298124]), array([0.89121785]), array([0.90603242]), array([0.96028771]), array([0.90982463]), array([0.78056046]), array([0.90484901]), array([0.89404459]), array([0.92716378]), array([0.85890099]), array([0.95196913]), array([0.9541397]), array([0.91505547]), array([0.94536944]), array([0.96556222]), array([0.50604129]), array([0.8693217]), array([0.87162136]), array([0.92570571]), array([0.89371286]), array([0.93179263]), array([0.92455477]), array([0.9257775]), array([0.93756026]), array([0.92444115]), array([0.66641718]), array([0.92368504]), array([0.89983635]), array([0.50116003]), array([0.78889897]), array([0.88618985]), array([0.96256502]), array([0.94598709]), array([0.86116696]), array([0.78788859]), array([0.90237703]), array([0.92576021]), array([0.92917945]), array([0.91903856]), array([0.95067452]), array([0.94649079]), array([0.85807269]), array([0.92691339]), array([0.94130715]), array([0.91000218]), array([0.95566653]), array([0.94338529]), array([0.82278029]), array([0.95914546]), array([0.86562749]), array([0.71333197]), array([0.90369045]), array([0.93457632]), array([0.95392725]), array([0.89624076]), array([0.86474235]), array([0.93506736]), array([0.94737086]), array([0.91937926]), array([0.92562087]), array([0.96051688]), array([0.504528]), array([0.92232406]), array([0.72263584]), array([0.9542766]), array([0.95503503]), array([0.5110616]), array([0.89870164]), array([0.70388728]), array([0.94793024]), array([0.92498659]), array([0.95819214]), array([0.96155456]), array([0.93421244]), array([0.7902431]), array([0.91941801]), array([0.94500786]), array([0.95418081]), array([0.95983432]), array([0.95115364]), array([0.92843794]), array([0.9324112]), array([0.95048364]), array([0.65870905]), array([0.92144219]), array([0.71075413]), array([0.79041377]), array([0.93533184]), array([0.85598958]), array([0.78681523]), array([0.9548914]), array([0.93751782]), array([0.89925626]), array([0.92535021]), array([0.95028128]), array([0.95938971]), array([0.87103227]), array([0.94105461]), array([0.93295883]), array([0.87194102]), array([0.9286417]), array([0.65450603]), array([0.95746173]), array([0.95705852]), array([0.94502902]), array([0.92643917]), array([0.76914689]), array([0.9646722]), array([0.47934448]), array([0.92885984]), array([0.96095069]), array([0.85309772]), array([0.94701599]), array([0.9504894]), array([0.89265922]), array([0.49682629]), array([0.95121383]), array([0.89890986]), array([0.94481193]), array([0.94950308]), array([0.87051843]), array([0.92941364]), array([0.9492302]), array([0.93179176]), array([0.50150522]), array([0.92669707]), array([0.92206088]), array([0.95065441]), array([0.90029768]), array([0.94472193]), array([0.94641364]), array([0.8623956]), array([0.49991604]), array([0.96153868]), array([0.95653535]), array([0.85269028]), array([0.92667556]), array([0.70607791]), array([0.94584486]), array([0.77729495]), array([0.94435819]), array([0.92422727]), array([0.86078703]), array([0.90359019]), array([0.96360602]), array([0.95162245]), array([0.94122836]), array([0.8750011]), array([0.90003975]), array([0.50228278]), array([0.95890449]), array([0.9011034]), array([0.95119512]), array([0.90636008]), array([0.88720392]), array([0.85042134]), array([0.870222]), array([0.95370259]), array([0.96189145]), array([0.48138307]), array([0.8946781]), array([0.9273579]), array([0.95842043]), array([0.70581225]), array([0.90970527]), array([0.92701286]), array([0.87017883]), array([0.93324517]), array([0.89086974]), array([0.95935375]), array([0.78918968]), array([0.925643]), array([0.71270887]), array([0.9404743]), array([0.93003733]), array([0.84695357]), array([0.86493968]), array([0.92980382]), array([0.94494637]), array([0.95779098]), array([0.92711408]), array([0.9498853]), array([0.96264452]), array([0.95837579]), array([0.94778481]), array([0.95184757]), array([0.94604069]), array([0.94641053]), array([0.93002873]), array([0.85357601]), array([0.9470952]), array([0.8503973]), array([0.95710667]), array([0.93131719]), array([0.90709915]), array([0.92655617]), array([0.96046001]), array([0.92786754]), array([0.90587326]), array([0.89846122]), array([0.93422879]), array([0.94226008]), array([0.94426776]), array([0.94497696]), array([0.86242585]), array([0.96504492]), array([0.94641286]), array([0.95590281]), array([0.93639105]), array([0.96153928]), array([0.91327917]), array([0.79037988]), array([0.95740635]), array([0.91460678]), array([0.92964371]), array([0.66661379]), array([0.92851973]), array([0.46414482]), array([0.86090775]), array([0.96521889]), array([0.9570642]), array([0.92370232]), array([0.78799991]), array([0.93085342]), array([0.89064775]), array([0.86427323]), array([0.89738754]), array([0.88374552]), array([0.94079431]), array([0.95455516]), array([0.96163311]), array([0.50947111]), array([0.96113015]), array([0.938001]), array([0.89059723]), array([0.95728247]), array([0.92863781]), array([0.93621601]), array([0.93069554]), array([0.80266725]), array([0.85391264]), array([0.80309615]), array([0.87497009]), array([0.91095588]), array([0.96170763]), array([0.65074474]), array([0.92295232]), array([0.51138801]), array([0.78024153]), array([0.79152404]), array([0.93107106]), array([0.95127953]), array([0.95223221]), array([0.79349666]), array([0.8557625]), array([0.46903319]), array([0.88505102]), array([0.95612384]), array([0.95315404]), array([0.66492035]), array([0.92496987]), array([0.90141554]), array([0.89656801]), array([0.94837487]), array([0.89749224]), array([0.79944731]), array([0.85221519]), array([0.9483434]), array([0.92606849]), array([0.89370919]), array([0.90788905]), array([0.9655233]), array([0.93028003]), array([0.95945018]), array([0.96376864]), array([0.95007665]), array([0.88021498]), array([0.92807094]), array([0.9427801]), array([0.95363528]), array([0.92856511]), array([0.95680805]), array([0.89050787]), array([0.94646411]), array([0.80816202]), array([0.96025905]), array([0.8524939]), array([0.9463514]), array([0.94047971]), array([0.93217914]), array([0.95959722]), array([0.94527216]), array([0.94989208]), array([0.85885345]), array([0.96297803]), array([0.78584661]), array([0.89538793]), array([0.85268491]), array([0.9292399]), array([0.71895997]), array([0.876214]), array([0.86613936]), array([0.90680298]), array([0.94913579]), array([0.51202191]), array([0.86025753]), array([0.92992872]), array([0.9296256]), array([0.48004146]), array([0.7895772]), array([0.95417272]), array([0.92315054]), array([0.90679117]), array([0.9086002]), array([0.92915209]), array([0.4677927]), array([0.9349405]), array([0.94419869]), array([0.94538221]), array([0.90131798]), array([0.9577319]), array([0.94012633]), array([0.87309084]), array([0.90112974]), array([0.71057894]), array([0.96017272]), array([0.66402516]), array([0.94179195]), array([0.90720798]), array([0.86919598]), array([0.94497005]), array([0.90255625]), array([0.93335534]), array([0.95692566]), array([0.96196187]), array([0.90243217]), array([0.45885475]), array([0.92373877]), array([0.92187554]), array([0.91019551]), array([0.95244174]), array([0.85588747]), array([0.91001338]), array([0.92331393]), array([0.95306962]), array([0.85571598]), array([0.94895954]), array([0.96140591]), array([0.85436845]), array([0.90443417]), array([0.65659098]), array([0.89173954]), array([0.9534143]), array([0.85442402]), array([0.95780955]), array([0.94139436]), array([0.94916627]), array([0.94214011]), array([0.92657546]), array([0.94890835]), array([0.93539753]), array([0.848592]), array([0.92201388]), array([0.95751556]), array([0.94921899]), array([0.77511782]), array([0.8520051]), array([0.92841619]), array([0.94708945]), array([0.92785485]), array([0.92434231]), array([0.87978193]), array([0.78164994]), array([0.96511624]), array([0.89908364]), array([0.79957468]), array([0.87079096]), array([0.84049861]), array([0.90717131]), array([0.91821771]), array([0.92936309]), array([0.89937912]), array([0.95805359]), array([0.89602712]), array([0.91768965]), array([0.93985148]), array([0.91415714]), array([0.93245175]), array([0.87087378]), array([0.89924004]), array([0.90158164]), array([0.89838085]), array([0.4878406]), array([0.94438883]), array([0.94386539]), array([0.70942969]), array([0.72427728]), array([0.94750625]), array([0.94809517]), array([0.71036332]), array([0.85506406]), array([0.96231969]), array([0.90934974]), array([0.78521926]), array([0.92618532]), array([0.92580929]), array([0.52197201]), array([0.91987643]), array([0.95908797]), array([0.95878817]), array([0.96348199]), array([0.81231206]), array([0.7197665]), array([0.84820493]), array([0.92674131]), array([0.94897162]), array([0.70431351]), array([0.78592338]), array([0.93179625]), array([0.92636435]), array([0.93681796]), array([0.93325777]), array([0.65019498]), array([0.9217478]), array([0.71118701]), array([0.95465498]), array([0.7907641]), array([0.95710741]), array([0.96473782]), array([0.65991134]), array([0.92629301]), array([0.94449799]), array([0.95775528]), array([0.8984449]), array([0.8876022]), array([0.87158546]), array([0.71365934]), array([0.92074647]), array([0.86981262]), array([0.96711634]), array([0.94780643]), array([0.84931151]), array([0.9664713]), array([0.85541179]), array([0.95538412]), array([0.94696727]), array([0.92888905]), array([0.94155116]), array([0.90773652]), array([0.89594502]), array([0.96722947]), array([0.94711192]), array([0.65499149]), array([0.91683336]), array([0.94946216]), array([0.86482286]), array([0.92617266]), array([0.78690684]), array([0.9433324]), array([0.88355062]), array([0.9212853]), array([0.94732747]), array([0.94432506]), array([0.93250441]), array([0.93684225]), array([0.91922927]), array([0.95052544]), array([0.71209964]), array([0.64632165]), array([0.96507909]), array([0.95236186]), array([0.90003728]), array([0.7857647]), array([0.93264673]), array([0.91073471]), array([0.94252123]), array([0.91972978]), array([0.95504065]), array([0.91335564]), array([0.51268889]), array([0.86213704]), array([0.8033004]), array([0.95956085]), array([0.95793946]), array([0.91161975]), array([0.93241378]), array([0.92886783]), array([0.92934792]), array([0.85946193]), array([0.94886662]), array([0.93388394]), array([0.94346752]), array([0.90504116]), array([0.94633435]), array([0.96530499]), array([0.90443438]), array([0.94389393]), array([0.5116711]), array([0.66204877]), array([0.80600736]), array([0.96466757]), array([0.89102018]), array([0.87534774]), array([0.51383629]), array([0.78686704]), array([0.51802432]), array([0.66434912]), array([0.95334789]), array([0.95179563]), array([0.88459041]), array([0.87154609]), array([0.89188778]), array([0.9034748]), array([0.71943658]), array([0.93158129]), array([0.90238624]), array([0.9244533]), array([0.90250526]), array([0.93435472]), array([0.95523575]), array([0.86553312]), array([0.7300233]), array([0.85135573]), array([0.94855874]), array([0.95981717]), array([0.93592545]), array([0.9385526]), array([0.92647326]), array([0.94913303]), array([0.89776553]), array([0.94627771]), array([0.91499936]), array([0.65995566]), array([0.96107859]), array([0.9172617]), array([0.48453014]), array([0.91151406]), array([0.8673509]), array([0.96358815]), array([0.92676256]), array([0.92623402]), array([0.95851081]), array([0.94909556]), array([0.5094504]), array([0.95259057]), array([0.88188221]), array([0.87546125]), array([0.89450314]), array([0.86190705]), array([0.9592887]), array([0.96257372]), array([0.93376121]), array([0.96458609]), array([0.93835108]), array([0.96047563]), array([0.89909115]), array([0.94450098]), array([0.89899012]), array([0.9518292]), array([0.92128224]), array([0.93295754]), array([0.94806007]), array([0.69538714]), array([0.87294182]), array([0.66564719]), array([0.92895691]), array([0.94486152]), array([0.86564651]), array([0.93997698]), array([0.69737806]), array([0.91590342]), array([0.93232314]), array([0.94999361]), array([0.89864873]), array([0.93838197]), array([0.71446002]), array([0.93256981]), array([0.71814575]), array([0.92592609]), array([0.81754604]), array([0.95179934]), array([0.6620377]), array([0.93095497]), array([0.90176523]), array([0.85884063]), array([0.90528806]), array([0.87944746]), array([0.53100664]), array([0.65146829]), array([0.93337072]), array([0.81184264]), array([0.93239944]), array([0.92392885]), array([0.96009278]), array([0.93218866]), array([0.92125151]), array([0.91233921]), array([0.9077238]), array([0.95950187]), array([0.90833577]), array([0.86551972]), array([0.91838037]), array([0.96356995]), array([0.78395265]), array([0.93303352]), array([0.7844159]), array([0.9441023]), array([0.95434448]), array([0.93847366]), array([0.80689227]), array([0.66124]), array([0.90932863]), array([0.93030841]), array([0.91485309]), array([0.84913885]), array([0.71091434]), array([0.96454856]), array([0.93013636]), array([0.89098664]), array([0.94096351]), array([0.96448345]), array([0.92972732]), array([0.9581092]), array([0.96451717]), array([0.96256422]), array([0.79555026]), array([0.88347752]), array([0.96491163]), array([0.9413069]), array([0.79575492]), array([0.7860681]), array([0.94337388]), array([0.93247456]), array([0.86373132]), array([0.92330979]), array([0.93220209]), array([0.92713208]), array([0.92222585]), array([0.8024618]), array([0.91797647]), array([0.9426041]), array([0.9406392]), array([0.93472195]), array([0.94475835]), array([0.93412075]), array([0.9579586]), array([0.89705857]), array([0.93841889]), array([0.85599436]), array([0.9012836]), array([0.79799458]), array([0.94648178]), array([0.87352073]), array([0.92410673]), array([0.85480278]), array([0.91907263]), array([0.92373824]), array([0.89811365]), array([0.94428815]), array([0.93561342]), array([0.92805635]), array([0.96060034]), array([0.51331669]), array([0.88804051]), array([0.89301749]), array([0.9484141]), array([0.93076499]), array([0.94987334]), array([0.94994767]), array([0.93346724]), array([0.95640431]), array([0.94656141]), array([0.94925043]), array([0.85002619]), array([0.93557083]), array([0.8634303]), array([0.92666884]), array([0.51628592]), array([0.91854622]), array([0.89062618]), array([0.91847694]), array([0.95539617]), array([0.92516771]), array([0.92773944]), array([0.96086806]), array([0.91114434]), array([0.95922364]), array([0.90564157]), array([0.93410071]), array([0.47574905]), array([0.96025654]), array([0.50969588]), array([0.8902491]), array([0.93233015]), array([0.94724986]), array([0.93170049]), array([0.90327512]), array([0.86209695]), array([0.94453189]), array([0.94579979]), array([0.9373346]), array([0.94758687]), array([0.86126085]), array([0.82478773]), array([0.95501287]), array([0.95992862]), array([0.66519845]), array([0.86667773]), array([0.95923475]), array([0.91508942]), array([0.88812552]), array([0.95250535]), array([0.86576972]), array([0.93561842]), array([0.93985667]), array([0.90177738]), array([0.89007355]), array([0.96466005]), array([0.9112545]), array([0.94516991]), array([0.86454832]), array([0.70913995]), array([0.96664762]), array([0.52115313]), array([0.66935205]), array([0.95652469]), array([0.65164181]), array([0.94763569]), array([0.94479615]), array([0.96377858]), array([0.94667215]), array([0.96026525]), array([0.94241458]), array([0.92891238]), array([0.91725621]), array([0.64338657]), array([0.96312186]), array([0.84896808]), array([0.47716696]), array([0.95753895]), array([0.95728691]), array([0.90168778]), array([0.936529]), array([0.92366711]), array([0.92919821]), array([0.70568299]), array([0.72184177]), array([0.90211011]), array([0.9605057]), array([0.7113916]), array([0.94156508]), array([0.91140234]), array([0.93058079]), array([0.84362035]), array([0.91836595]), array([0.86894653]), array([0.70880125]), array([0.95690121]), array([0.86474893]), array([0.95134545]), array([0.94330079]), array([0.93572337]), array([0.9099005]), array([0.95729293]), array([0.94343776]), array([0.88300452]), array([0.93839524]), array([0.94532671]), array([0.95924579]), array([0.95115831]), array([0.89708954]), array([0.9248527]), array([0.93939277]), array([0.76839836]), array([0.47444812]), array([0.96249711]), array([0.52881974]), array([0.80054741]), array([0.93573681]), array([0.93717408]), array([0.79996838]), array([0.86931359]), array([0.66312047]), array([0.92656579]), array([0.94879363]), array([0.80095792]), array([0.95584522]), array([0.94223745]), array([0.95807729]), array([0.85207088]), array([0.92804659]), array([0.92875576]), array([0.93662052]), array([0.96302155]), array([0.94488163]), array([0.88478584]), array([0.70505838]), array([0.94884141]), array([0.88491165]), array([0.93602315]), array([0.64937905]), array([0.93073287]), array([0.95923577]), array([0.94114134]), array([0.77654999]), array([0.90210943]), array([0.93469151]), array([0.47877389]), array([0.94226613]), array([0.95693765]), array([0.91924752]), array([0.92577]), array([0.85727385]), array([0.85277589]), array([0.9452943]), array([0.90473274]), array([0.9471792]), array([0.64786845]), array([0.87452282]), array([0.91869723]), array([0.85745217]), array([0.91103538]), array([0.94241334]), array([0.96041475]), array([0.9338859]), array([0.80952945]), array([0.81770825]), array([0.93382156]), array([0.95006026]), array([0.71438827]), array([0.86051372]), array([0.87549353]), array([0.85006623]), array([0.94329342]), array([0.93096497]), array([0.96450735]), array([0.85392792]), array([0.95554083]), array([0.85162153]), array([0.95731392]), array([0.94337509]), array([0.66327937]), array([0.94012369]), array([0.89961104]), array([0.9394177]), array([0.96044962]), array([0.96544275]), array([0.95932921]), array([0.95046012]), array([0.94801283]), array([0.94703989]), array([0.79883289]), array([0.91503741]), array([0.93727824]), array([0.93277848]), array([0.85961681]), array([0.95824839]), array([0.92915717]), array([0.93984409]), array([0.90127728]), array([0.93346238]), array([0.92911916]), array([0.88514411]), array([0.95748357]), array([0.80554197]), array([0.92651987]), array([0.70658155]), array([0.93998129]), array([0.93370216]), array([0.94903839]), array([0.95795095]), array([0.85515391]), array([0.8546944]), array([0.90080003]), array([0.95752398]), array([0.89978174]), array([0.93369234]), array([0.91699678]), array([0.85408385]), array([0.9338684]), array([0.96600415]), array([0.91176506]), array([0.67003677]), array([0.96528008]), array([0.91283135]), array([0.91881441]), array([0.94310289]), array([0.94449571]), array([0.87310661]), array([0.91368109]), array([0.88761566]), array([0.96234422]), array([0.77451601]), array([0.96181095]), array([0.95811639]), array([0.94911575]), array([0.8480896]), array([0.94225222]), array([0.6623059]), array([0.90753167]), array([0.94787114]), array([0.96420508]), array([0.87304348]), array([0.92882339]), array([0.66561801]), array([0.94596165]), array([0.5227648]), array([0.95312172]), array([0.92632812]), array([0.95673477]), array([0.96067039]), array([0.90808218]), array([0.9254351]), array([0.94661783]), array([0.90257333]), array([0.89886686]), array([0.92390011]), array([0.66293983]), array([0.77646215]), array([0.95659145]), array([0.94847741]), array([0.96033799]), array([0.85510053]), array([0.85590955]), array([0.95282691]), array([0.88622342]), array([0.9310131]), array([0.96143745]), array([0.88634254]), array([0.51378335]), array([0.91116531]), array([0.91968504]), array([0.96178288]), array([0.8938796]), array([0.91597288]), array([0.70833286]), array([0.84883056]), array([0.94963685]), array([0.90065025]), array([0.96566144]), array([0.95787231]), array([0.95900453]), array([0.91088125]), array([0.84961522]), array([0.70859953]), array([0.91260758]), array([0.96289632]), array([0.96270974]), array([0.92917661]), array([0.89492628]), array([0.95822447]), array([0.94734477]), array([0.96294702]), array([0.90210482]), array([0.9318196]), array([0.95548541]), array([0.93541233]), array([0.94409502]), array([0.81751569]), array([0.86101681]), array([0.93758146]), array([0.91049083]), array([0.89161085]), array([0.933397]), array([0.92899233]), array([0.90911225]), array([0.95889207]), array([0.96118079]), array([0.65386514]), array([0.95536562]), array([0.86961961]), array([0.91707965]), array([0.80557741]), array([0.94309028]), array([0.71361755]), array([0.70489543]), array([0.95981189]), array([0.93002979]), array([0.92253424]), array([0.92171335]), array([0.95834045]), array([0.71689334]), array([0.94768564]), array([0.6536277]), array([0.91925813]), array([0.92866757]), array([0.66893299]), array([0.90189458]), array([0.90434643]), array([0.95755267]), array([0.96409049]), array([0.90027166]), array([0.85780924]), array([0.9590051]), array([0.90747483]), array([0.92705701]), array([0.95064846]), array([0.7810467]), array([0.90107181]), array([0.90847905]), array([0.90611388]), array([0.93209339]), array([0.94489557]), array([0.93102378]), array([0.47277281]), array([0.95783238]), array([0.95835076]), array([0.94657067]), array([0.9473427]), array([0.91643504]), array([0.93354283]), array([0.91814602]), array([0.92345563]), array([0.73579938]), array([0.96023016]), array([0.93052611]), array([0.96699299]), array([0.93378445]), array([0.96028773]), array([0.93098837]), array([0.96749865]), array([0.91862779]), array([0.88996833]), array([0.96623867]), array([0.92790348]), array([0.89531745]), array([0.94915321]), array([0.7938935]), array([0.90553672]), array([0.80040081]), array([0.94103263]), array([0.92977049]), array([0.92464578]), array([0.94758465]), array([0.95466966]), array([0.95695196]), array([0.48469092]), array([0.49264254]), array([0.92984796]), array([0.46446059]), array([0.78455687]), array([0.47229458]), array([0.84640627]), array([0.91373675]), array([0.91267277]), array([0.95987053]), array([0.90022135]), array([0.93108701]), array([0.95424567]), array([0.89641972]), array([0.94676003]), array([0.77555452]), array([0.94298711]), array([0.95225325]), array([0.79104269]), array([0.89635153]), array([0.85978068]), array([0.92922786]), array([0.81071271]), array([0.90945472]), array([0.94785495]), array([0.91598923]), array([0.95590748]), array([0.93637321]), array([0.7127461]), array([0.9469765]), array([0.92202074]), array([0.95089332]), array([0.52399017]), array([0.95392426]), array([0.94934645]), array([0.91245144]), array([0.78263487]), array([0.86506974]), array([0.93257794]), array([0.93705254]), array([0.9664445]), array([0.94991499]), array([0.79840774]), array([0.77820276]), array([0.95962651]), array([0.9319457]), array([0.9185349]), array([0.95916434]), array([0.94694921]), array([0.95377947]), array([0.94272231]), array([0.94068623]), array([0.93389617]), array([0.91732958]), array([0.9156567]), array([0.96331389]), array([0.93209146]), array([0.65882162]), array([0.94990209]), array([0.89774096]), array([0.86136525]), array([0.93440108]), array([0.96390339]), array([0.9482434]), array([0.5167093]), array([0.9010314]), array([0.50937038]), array([0.95239221]), array([0.85225561]), array([0.92199786]), array([0.79667836]), array([0.95941037]), array([0.86194283]), array([0.92566004]), array([0.94499909]), array([0.92515484]), array([0.93073278]), array([0.96559495]), array([0.7178886]), array([0.89963536]), array([0.92945778]), array([0.89156567]), array([0.89855955]), array([0.78077188]), array([0.90513615]), array([0.93088564]), array([0.8139623]), array([0.92377135]), array([0.96702186]), array([0.9533381]), array([0.90429395]), array([0.91592914]), array([0.88108689]), array([0.95369494]), array([0.92091417]), array([0.81553687]), array([0.9546919]), array([0.94938777]), array([0.90583155]), array([0.90160878]), array([0.49061523]), array([0.95085546]), array([0.94592341]), array([0.94127608]), array([0.95662567]), array([0.91990643]), array([0.96517537]), array([0.93573216]), array([0.96107755]), array([0.96835897]), array([0.9153585]), array([0.95089535]), array([0.94218292]), array([0.93844415]), array([0.94294892]), array([0.66075114]), array([0.96318092]), array([0.78468434]), array([0.8970804]), array([0.93231653]), array([0.95066417]), array([0.93202308]), array([0.92718199]), array([0.81470671]), array([0.95100022]), array([0.91515027]), array([0.89815056]), array([0.80173487]), array([0.89358279]), array([0.9489664]), array([0.95976532]), array([0.91288079]), array([0.9374755]), array([0.96216491]), array([0.92198894]), array([0.91857409]), array([0.65737744]), array([0.93203547]), array([0.89848775])]
Testing true: [tensor([0.9666], dtype=torch.float64), tensor([0.7991], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8005], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9020], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.7197], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.7197], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.7197], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8016], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8010], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.7976], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8005], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9344], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.7986], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8004], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9159], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9159], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.7909], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.8017], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.7197], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.7991], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8005], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.7197], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9022], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8021], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9020], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.7197], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.7197], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.7967], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8016], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8002], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8012], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.7975], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.7197], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8020], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.7197], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.7197], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9024], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8007], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.8021], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8003], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8016], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8009], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8008], dtype=torch.float64), tensor([0.7989], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8015], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.8012], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9000], dtype=torch.float64)]
real true y: [[0.32740554]
 [0.83494666]
 [0.8345806 ]
 [0.41510519]
 [0.47900547]
 [0.56558515]
 [0.33755156]
 [0.47872557]
 [0.83496995]
 [0.33829966]
 [0.84533563]
 [0.56213398]
 [0.84833181]
 [0.5678679 ]
 [0.5678679 ]
 [0.39423077]
 [0.5678679 ]
 [0.83491207]
 [0.41559829]
 [0.47839002]
 [0.83496995]
 [0.83494102]
 [0.33793467]
 [0.84031884]
 [0.47912786]
 [0.39201183]
 [0.83494053]
 [0.41880342]
 [0.39521696]
 [0.83491806]
 [0.5678679 ]
 [0.41978961]
 [0.83496199]
 [0.84532485]
 [0.47831412]
 [0.56211337]
 [0.39497041]
 [0.45983665]
 [0.56558515]
 [0.565066  ]
 [0.47928948]
 [0.84401948]
 [0.32867865]
 [0.84720061]
 [0.3365703 ]
 [0.56725084]
 [0.33824331]
 [0.41978961]
 [0.47879542]
 [0.84626692]
 [0.33720814]
 [0.83492583]
 [0.84527697]
 [0.3392247 ]
 [0.33500164]
 [0.84534281]
 [0.47899738]
 [0.41978961]
 [0.840417  ]
 [0.47933536]]
real pred y: [[0.79351255]
 [0.91589371]
 [0.85669384]
 [0.69525363]
 [0.7039236 ]
 [0.72787061]
 [0.78415012]
 [0.72277935]
 [0.87873453]
 [0.71470587]
 [0.71762013]
 [0.70843936]
 [0.71631656]
 [0.70262692]
 [0.71081579]
 [0.69740667]
 [0.71873859]
 [0.85787677]
 [0.69686694]
 [0.71605308]
 [0.89609988]
 [0.90388121]
 [0.74260676]
 [0.69238468]
 [0.7233073 ]
 [0.69737056]
 [0.90551719]
 [0.69624942]
 [0.69780171]
 [0.84379211]
 [0.72557062]
 [0.69450656]
 [0.88591642]
 [0.70899961]
 [0.72001703]
 [0.6795534 ]
 [0.69709406]
 [0.72356863]
 [0.70469934]
 [0.71360743]
 [0.72224271]
 [0.70795189]
 [0.72542532]
 [0.69431299]
 [0.73680565]
 [0.71355284]
 [0.74114795]
 [0.6965586 ]
 [0.68503629]
 [0.70887594]
 [0.73603383]
 [0.80048141]
 [0.71587352]
 [0.76975583]
 [0.75288455]
 [0.6985058 ]
 [0.72270576]
 [0.69751905]
 [0.69719722]
 [0.73505606]]
real cor: 0.02893113294784692
real p: 0.8263140759797688
training loss [0.1563045891863837, 0.01693119713477035, 0.01686054464099932, 0.01799004359278446, 0.01347024093026677, 0.010849769680242604, 0.011344466769792835, 0.009014374249727116, 0.010745854370206814, 0.004999256495084822, 0.004372539252245204, 0.002993735528087981, 0.0025043142375504126, 0.0020262937601165753, 0.0016514911609414379, 0.001003246881897612, 0.0008631519400733583, 0.0007701644092297545, 0.0005903566609337179, 0.0006160523894643068, 0.0006453479683308347, 0.00041238539012885406, 0.0004413811122750452, 0.00046193468473702527, 0.0003416269443991786, 0.00029690987218986134, 0.00026933687090172846, 0.00024327480769319545, 0.0002531066227333019, 0.00021501417108348524, 0.00029143276766542927, 0.0002781974870102229, 0.0006837674382142784, 0.00042846195531201785, 0.000264647066196521, 0.00018069925500525732, 0.00018669861327580151, 0.00016895622459417372, 0.0002113469873003306, 0.00016899761511064219, 0.0001566570526004063, 0.00014758307459428614, 0.0001549779757473559, 0.00013699454664519985, 0.000133613315888009, 0.00012904699056915568, 0.00015310625836332406, 0.00012050130019270112, 0.00013152093283360042, 0.0001156068520147818]
validation loss: [0.054684732479596286, 0.020706611125045724, 0.0018519282415320557, 0.006331558946067482, 0.018417326616089625, 0.0026772254313781113, 0.012582542785365004, 0.010675525848174792, 0.012645005216556773, 0.0017802826322548657, 0.0009965537389102124, 0.0006898710227736354, 0.00043682068813534914, 0.0029764952068990756, 0.0005217307660197647, 0.0008102893088138642, 0.00041413285866169524, 0.0010291419979874328, 0.0002487519678962957, 0.0020936563712803465, 0.22982089804505, 0.0006991250243910788, 0.0005372605607786079, 0.0005145146639725142, 0.0001887238466916049, 0.0011548505057439925, 0.0005881880683522709, 0.00013312744444491138, 0.0005325080294818119, 0.0007250473186765736, 0.0002500086723814666, 0.00018740485003078218, 0.00033032140683003386, 0.00023822209242689032, 0.0002762319050424673, 0.00017952993402304136, 0.00033608080509348704, 0.0002544830355437351, 0.00028367577124295193, 9.17689840694079e-05, 0.00011129306975454846, 0.00020549313192605518, 0.0005186301242240531, 0.0001472971292685285, 0.0001282989739009657, 8.5252830086774e-05, 0.00024015493151290318, 0.0001270124979063719, 0.00013370143153234733, 9.65770867510636e-05]
testing loss: [9.75298449572753e-05]
training cor: [0.2990610208062628, 0.42972331366691785, 0.4429054009410833, 0.4456590945836145, 0.4635548172243366, 0.5064662432298606, 0.5016086773096828, 0.5431177971556403, 0.5633486786482693, 0.6185864917910446, 0.6552237213905897, 0.6890410920089938, 0.7109222075035257, 0.7326834934123153, 0.7629235854280487, 0.8178434054040706, 0.8289360666939551, 0.83966979266465, 0.8640793644826237, 0.8657988958776174, 0.861489243396994, 0.8945003172070705, 0.8904828471336586, 0.8937016157542916, 0.9057741281765197, 0.9193408186871472, 0.9243667653687695, 0.9323018772436129, 0.9319103656215593, 0.9397462340731293, 0.9206538414820821, 0.9230448936154058, 0.883589466461683, 0.9026097927087444, 0.9274540036468655, 0.9462977229956069, 0.946368644467162, 0.9494441265547949, 0.9395292325042945, 0.9499872596816666, 0.95410839953322, 0.9545903271483395, 0.9514904731313869, 0.9578022394811022, 0.9592921860004964, 0.9609510732423628, 0.9530291144864127, 0.9613363712988381, 0.9598804330055265, 0.9646786879731879]
validation cor: [0.6070385151077606, 0.10550873973444135, 0.8342702444041192, 0.7835467526459026, 0.5058766782087379, 0.42185578885846453, 0.30419455965874415, 0.5929484864800787, 0.8347400186613647, 0.7937118150929149, 0.7619205934352313, 0.9145481583894786, 0.9152394691033651, 0.6124857892054445, 0.946002358379392, 0.9544320059566237, 0.8618575353852528, 0.9200320646513698, 0.940798075203373, 0.8639539833522699, 0.7354081489859816, 0.9628451305414082, 0.9666782189380171, 0.9589738896233558, 0.959164087388851, 0.9591458886880927, 0.9706643526722213, 0.9713747187018758, 0.9506867333670955, 0.8864567318903076, 0.96987547274709, 0.9723061295977846, 0.9702635615724287, 0.9501156027821419, 0.9751576513264202, 0.9746306039329894, 0.9213322450608269, 0.95138392311671, 0.9751993512734116, 0.9769811706404257, 0.9778012466742099, 0.9741941371925488, 0.8597862129624383, 0.9667666160515701, 0.979237783661266, 0.97804878433093, 0.9772104328728941, 0.9725332687735702, 0.979402864170936, 0.9647224893632335]
testing cor: [0.9671698496994781]
training p: [8.964379724340544e-271, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
validation p: [0.0, 8.344486478747195e-11, 0.0, 0.0, 3.552418225096301e-244, 1.3937482174805818e-162, 1.5194514720793215e-81, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
testing p: [0.0]
