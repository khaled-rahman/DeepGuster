training: 13195 , validation: 16965
1885
Training and Testing my model
1.2.0
Net(
  (conv1): Conv2d(4, 128, kernel_size=(2, 2), stride=(2, 2))
  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (conv2): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (conv2_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (fc1): Linear(in_features=262144, out_features=4096, bias=True)
  (fc1_bn): BatchNorm1d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (fc2): Linear(in_features=4096, out_features=1, bias=True)
)
12
torch.Size([128, 4, 2, 2])
BCEW loss, Adam optimizer, lr = 0.001
[1,     1] loss: 0.796
[1,   506] loss: 0.348
[2,     1] loss: 0.299
[2,   506] loss: 0.325
[3,     1] loss: 0.291
[3,   506] loss: 0.322
[4,     1] loss: 0.328
[4,   506] loss: 0.322
[5,     1] loss: 0.349
[5,   506] loss: 0.322
[6,     1] loss: 0.369
[6,   506] loss: 0.320
[7,     1] loss: 0.296
[7,   506] loss: 0.319
[8,     1] loss: 0.315
[8,   506] loss: 0.318
[9,     1] loss: 0.279
[9,   506] loss: 0.318
[10,     1] loss: 0.422
[10,   506] loss: 0.319
[11,     1] loss: 0.356
[11,   506] loss: 0.317
[12,     1] loss: 0.307
[12,   506] loss: 0.318
[13,     1] loss: 0.347
[13,   506] loss: 0.317
[14,     1] loss: 0.292
[14,   506] loss: 0.316
[15,     1] loss: 0.346
[15,   506] loss: 0.319
[16,     1] loss: 0.338
[16,   506] loss: 0.318
[17,     1] loss: 0.311
[17,   506] loss: 0.317
[18,     1] loss: 0.292
[18,   506] loss: 0.316
[19,     1] loss: 0.305
[19,   506] loss: 0.317
[20,     1] loss: 0.367
[20,   506] loss: 0.319
[21,     1] loss: 0.278
[21,   506] loss: 0.317
[22,     1] loss: 0.303
[22,   506] loss: 0.316
[23,     1] loss: 0.315
[23,   506] loss: 0.318
[24,     1] loss: 0.336
[24,   506] loss: 0.318
[25,     1] loss: 0.346
[25,   506] loss: 0.318
[26,     1] loss: 0.308
[26,   506] loss: 0.319
[27,     1] loss: 0.316
[27,   506] loss: 0.319
[28,     1] loss: 0.323
[28,   506] loss: 0.318
[29,     1] loss: 0.292
[29,   506] loss: 0.319
[30,     1] loss: 0.287
[30,   506] loss: 0.318
[31,     1] loss: 0.337
[31,   506] loss: 0.317
[32,     1] loss: 0.320
[32,   506] loss: 0.317
[33,     1] loss: 0.361
[33,   506] loss: 0.316
[34,     1] loss: 0.279
[34,   506] loss: 0.317
[35,     1] loss: 0.338
[35,   506] loss: 0.318
[36,     1] loss: 0.342
[36,   506] loss: 0.318
[37,     1] loss: 0.348
[37,   506] loss: 0.318
[38,     1] loss: 0.320
[38,   506] loss: 0.318
[39,     1] loss: 0.282
[39,   506] loss: 0.318
[40,     1] loss: 0.393
[40,   506] loss: 0.318
[41,     1] loss: 0.301
[41,   506] loss: 0.319
[42,     1] loss: 0.323
[42,   506] loss: 0.318
[43,     1] loss: 0.304
[43,   506] loss: 0.318
[44,     1] loss: 0.325
[44,   506] loss: 0.318
[45,     1] loss: 0.300
[45,   506] loss: 0.317
[46,     1] loss: 0.284
[46,   506] loss: 0.317
[47,     1] loss: 0.341
[47,   506] loss: 0.319
[48,     1] loss: 0.304
[48,   506] loss: 0.317
[49,     1] loss: 0.322
[49,   506] loss: 0.317
[50,     1] loss: 0.272
[50,   506] loss: 0.320
Training time: 5194m 37s
Testing predicted: [array([1.90121751]), array([1.88859543]), array([1.34621175]), array([2.40367263]), array([2.78973312]), array([2.83056343]), array([0.65890409]), array([2.21255232]), array([2.86616156]), array([2.95899548]), array([2.5962282]), array([1.32003697]), array([2.74161191]), array([1.35285075]), array([1.96789974]), array([2.60677773]), array([3.39764455]), array([2.53520636]), array([2.91034347]), array([2.40580111]), array([2.33200259]), array([2.63208087]), array([0.89440465]), array([3.30918949]), array([3.10533815]), array([2.21537388]), array([2.226376]), array([2.43222676]), array([2.57364951]), array([1.81936447]), array([3.00394225]), array([2.8949725]), array([2.31425018]), array([1.37168834]), array([2.98422192]), array([3.32352161]), array([1.93346618]), array([1.89457474]), array([2.89210927]), array([-0.02579673]), array([2.29465294]), array([2.14318795]), array([2.43025204]), array([3.08988246]), array([1.88726006]), array([1.44602581]), array([1.83289407]), array([2.56141136]), array([2.25357501]), array([2.65618119]), array([3.24625124]), array([3.31697585]), array([2.6229303]), array([1.99012127]), array([2.3368043]), array([2.3065056]), array([2.18599346]), array([2.91048782]), array([3.26068429]), array([2.96388051]), array([2.55798193]), array([0.89372709]), array([2.79680138]), array([-0.05078845]), array([2.93660854]), array([1.32843825]), array([1.93129268]), array([1.82310869]), array([2.00178731]), array([0.91881961]), array([2.42518409]), array([2.67163349]), array([2.328418]), array([2.87116521]), array([0.91570706]), array([3.31592662]), array([2.6784767]), array([3.00427836]), array([2.59373205]), array([2.688112]), array([2.65767254]), array([2.51494705]), array([2.33364649]), array([2.23194176]), array([1.80648512]), array([2.87425027]), array([2.41552081]), array([2.5806727]), array([0.65365474]), array([1.84718785]), array([3.19258042]), array([2.82638193]), array([2.26033171]), array([2.53992137]), array([2.97161617]), array([2.55753219]), array([3.34614286]), array([0.67233235]), array([3.01630562]), array([3.19243488]), array([2.50554617]), array([2.88327328]), array([2.57745097]), array([1.99177802]), array([2.46559932]), array([0.68261587]), array([2.9027598]), array([2.84894041]), array([1.33256431]), array([3.15013715]), array([3.41649643]), array([2.45598228]), array([1.32338375]), array([1.87410772]), array([1.4435917]), array([2.19012272]), array([2.92063275]), array([1.85714559]), array([2.59467188]), array([2.66007724]), array([2.64244705]), array([2.40927961]), array([2.78546906]), array([2.59088906]), array([2.26557575]), array([2.72025053]), array([2.58349232]), array([2.86298939]), array([3.31437517]), array([2.32449667]), array([2.38238132]), array([0.6788583]), array([1.98387124]), array([2.14895195]), array([2.28771383]), array([2.61893782]), array([2.62039094]), array([2.2378611]), array([1.46814881]), array([3.22856748]), array([1.96387712]), array([1.33622821]), array([2.60339994]), array([1.45253001]), array([2.62867319]), array([2.9185216]), array([2.7843121]), array([2.56662491]), array([2.97239937]), array([2.65184138]), array([2.61006528]), array([2.14701327]), array([0.6885351]), array([1.76166574]), array([0.65448011]), array([2.56829859]), array([1.81658562]), array([2.42538807]), array([2.89556611]), array([3.36674619]), array([2.66175088]), array([1.80165233]), array([2.19803167]), array([2.21737466]), array([2.32926984]), array([1.86246191]), array([2.18632874]), array([2.8683864]), array([1.28550516]), array([2.61296837]), array([2.7016937]), array([0.9389903]), array([0.97817387]), array([1.86729154]), array([2.38638182]), array([1.44139048]), array([2.80698764]), array([0.69645931]), array([3.22064082]), array([2.87919496]), array([2.55993535]), array([2.82521682]), array([2.57879081]), array([0.86999641]), array([2.81685076]), array([2.64788799]), array([2.00237459]), array([1.43133163]), array([0.66122193]), array([1.98080419]), array([2.80057794]), array([2.68385215]), array([1.3916025]), array([2.669033]), array([1.35735904]), array([1.85541231]), array([1.42667303]), array([2.92167757]), array([0.88487805]), array([1.32550353]), array([2.99256265]), array([3.17567576]), array([2.27119627]), array([2.91852454]), array([2.3055303]), array([3.12057732]), array([2.78880808]), array([0.92335116]), array([0.19074729]), array([0.70349691]), array([2.63868983]), array([2.53162486]), array([1.41875322]), array([3.18388194]), array([2.77148273]), array([0.67919968]), array([2.92124192]), array([2.74058398]), array([1.39165058]), array([2.72440265]), array([2.38212938]), array([2.98856404]), array([2.59422894]), array([2.28334621]), array([1.86521191]), array([2.63595111]), array([0.19979487]), array([2.27993692]), array([2.56218229]), array([1.83947351]), array([0.89966034]), array([2.1872524]), array([-0.03246877]), array([0.71585416]), array([2.24800284]), array([0.96636253]), array([2.89695241]), array([2.88627373]), array([2.26697487]), array([2.64209886]), array([2.2957797]), array([2.53757597]), array([2.32355326]), array([2.65121472]), array([3.02036193]), array([2.40494713]), array([2.6453974]), array([2.39402107]), array([1.36656373]), array([2.94812856]), array([3.0166986]), array([2.94708629]), array([3.19251509]), array([2.90719805]), array([2.54955349]), array([2.21529745]), array([2.54749178]), array([2.23788496]), array([2.67161656]), array([0.9221305]), array([1.34911907]), array([2.29947746]), array([2.70505323]), array([2.71418403]), array([3.18725885]), array([2.72254337]), array([2.66614787]), array([2.95568421]), array([-0.01277909]), array([1.41159398]), array([3.24656788]), array([1.39676959]), array([2.81889928]), array([2.65416519]), array([2.60155158]), array([0.68929897]), array([3.39410391]), array([0.65924745]), array([2.5084693]), array([3.33939682]), array([3.28920816]), array([2.31493674]), array([3.43037296]), array([0.66487822]), array([1.45636834]), array([2.8655657]), array([2.55210123]), array([2.61554857]), array([2.69572198]), array([2.26010065]), array([2.83445469]), array([2.5613421]), array([1.95561247]), array([1.40109113]), array([2.53460266]), array([2.96297377]), array([2.97993605]), array([3.45959936]), array([2.78139777]), array([2.21990643]), array([1.860427]), array([3.31224316]), array([3.07692079]), array([2.9027008]), array([2.80522427]), array([2.00960699]), array([2.83405193]), array([2.00396394]), array([0.09283521]), array([2.40983775]), array([2.52001156]), array([2.58129561]), array([1.84494239]), array([0.69741084]), array([0.10302659]), array([1.46609163]), array([3.38149062]), array([2.63595374]), array([0.89566558]), array([2.6520501]), array([2.96162048]), array([1.88047349]), array([1.91321808]), array([2.55003804]), array([2.8112419]), array([1.81520471]), array([3.30329435]), array([2.83001455]), array([2.57308897]), array([2.21183492]), array([2.30947952]), array([0.91018672]), array([2.53442494]), array([3.2528637]), array([2.25813679]), array([1.96359225]), array([2.526885]), array([2.27186089]), array([3.06678005]), array([-0.08596544]), array([1.34642752]), array([2.63413856]), array([2.92042356]), array([0.69162516]), array([2.9190646]), array([1.89249022]), array([2.85376229]), array([2.90458755]), array([2.68164328]), array([2.76450591]), array([1.45594282]), array([1.41108593]), array([3.24268863]), array([2.33926206]), array([2.58757216]), array([2.94674458]), array([3.40527078]), array([-0.15132027]), array([3.33294118]), array([2.85638623]), array([1.81307333]), array([0.71041075]), array([2.2542293]), array([3.39564973]), array([2.26723055]), array([2.91962953]), array([2.35855844]), array([2.40533539]), array([2.51147147]), array([2.55955835]), array([2.66076536]), array([2.56669482]), array([2.5005271]), array([3.25929679]), array([0.67391222]), array([2.63897103]), array([2.60012383]), array([2.33810513]), array([0.02172796]), array([2.55598718]), array([1.82810396]), array([1.95782865]), array([2.22480545]), array([2.64837449]), array([3.10309665]), array([2.28129385]), array([2.94765813]), array([2.11700084]), array([3.14803011]), array([1.41945353]), array([2.00020151]), array([2.29449049]), array([2.25573775]), array([2.18623766]), array([2.26287852]), array([1.33365725]), array([1.38923691]), array([2.36405042]), array([2.92687065]), array([2.51653318]), array([1.42449985]), array([2.80934577]), array([0.69727139]), array([3.06791841]), array([-0.13105632]), array([3.26175572]), array([2.21065206]), array([-0.08278167]), array([1.47780068]), array([3.4867358]), array([2.41935816]), array([0.68481168]), array([2.58553344]), array([2.67096483]), array([2.2381058]), array([3.02014818]), array([0.70821458]), array([0.8851919]), array([2.32248868]), array([2.75069858]), array([2.78488588]), array([2.94848705]), array([2.85435128]), array([3.37760197]), array([2.82781445]), array([2.92553555]), array([2.23653449]), array([2.74784491]), array([1.96809954]), array([3.08251439]), array([1.80149083]), array([2.41805325]), array([2.9693945]), array([2.90453913]), array([2.21172167]), array([2.98816179]), array([2.83255057]), array([0.89537965]), array([2.54085648]), array([0.68385423]), array([2.94935685]), array([0.91842753]), array([2.6991526]), array([2.77234697]), array([2.91708575]), array([3.20855503]), array([2.22624421]), array([3.20955747]), array([2.25619491]), array([2.40936321]), array([2.6842257]), array([3.16070786]), array([2.29463836]), array([2.44563131]), array([3.45691747]), array([2.65341416]), array([1.30447656]), array([2.57416603]), array([3.45309611]), array([2.42875342]), array([2.39559433]), array([-0.03904534]), array([2.19095479]), array([2.87956527]), array([-0.05313641]), array([2.97062783]), array([1.99436812]), array([2.60580046]), array([2.99057906]), array([3.31205838]), array([2.23357379]), array([2.67193482]), array([2.37790572]), array([0.91836861]), array([1.98872744]), array([2.24770324]), array([1.95076724]), array([2.65697453]), array([0.66283222]), array([3.23756339]), array([2.97260025]), array([2.51835633]), array([2.61059525]), array([1.82511537]), array([2.45090682]), array([2.92781409]), array([-0.03736973]), array([1.91599946]), array([2.42211337]), array([2.59604884]), array([2.65358495]), array([1.32564925]), array([2.25834718]), array([2.57355857]), array([0.13325751]), array([2.39456336]), array([3.07602188]), array([2.62430368]), array([2.99689291]), array([2.9244286]), array([2.67190776]), array([1.83811597]), array([2.67741323]), array([2.16494989]), array([3.1498363]), array([2.85195981]), array([3.31874399]), array([2.73525443]), array([0.70759072]), array([1.83052323]), array([1.99598505]), array([2.35661807]), array([2.4202669]), array([2.5146594]), array([2.13550262]), array([-0.20982613]), array([3.29935578]), array([2.62401967]), array([1.91971248]), array([2.25673564]), array([2.69221315]), array([2.66944812]), array([2.86673832]), array([3.14473768]), array([2.28672564]), array([1.86740014]), array([2.59451028]), array([2.6790789]), array([3.36167841]), array([3.41127558]), array([2.64906206]), array([2.64644096]), array([2.85053252]), array([2.80383894]), array([2.25141325]), array([2.27474604]), array([2.70606404]), array([2.89527515]), array([-0.09531053]), array([2.94606225]), array([2.3032787]), array([0.89429114]), array([2.37314762]), array([0.07778171]), array([2.89851695]), array([2.22859231]), array([2.2907864]), array([2.23725601]), array([3.16629617]), array([1.80933057]), array([0.87900825]), array([2.25669206]), array([1.42990837]), array([2.30081055]), array([2.22728359]), array([2.42126463]), array([2.79222221]), array([2.94512187]), array([2.84879866]), array([1.91381749]), array([2.91461974]), array([1.79232204]), array([1.38441255]), array([2.27310491]), array([1.34721318]), array([2.60334247]), array([3.294051]), array([1.30903703]), array([1.84048055]), array([2.71484145]), array([0.91571883]), array([1.95559932]), array([0.9232999]), array([0.11113937]), array([3.33376198]), array([0.68601269]), array([3.00547598]), array([2.62174532]), array([3.43634283]), array([2.4799681]), array([1.24254484]), array([2.6601572]), array([0.89255108]), array([2.87786415]), array([2.48113916]), array([2.57387317]), array([2.60530518]), array([0.16777938]), array([3.32319736]), array([3.0336581]), array([1.82646738]), array([2.45258203]), array([2.44445976]), array([2.69311609]), array([1.41937797]), array([1.36774685]), array([1.86119416]), array([1.84771522]), array([1.82822646]), array([2.65085359]), array([1.83280364]), array([2.53419769]), array([2.55097976]), array([2.66969492]), array([1.41734242]), array([2.85881396]), array([1.37622932]), array([2.67256108]), array([2.26046505]), array([2.87299294]), array([2.1777935]), array([1.32803022]), array([3.04735276]), array([2.40218664]), array([2.62253996]), array([2.8485056]), array([2.22880591]), array([2.64385639]), array([2.55077413]), array([2.90238867]), array([2.42902873]), array([2.88917218]), array([2.82215957]), array([2.1798657]), array([2.26832258]), array([2.825352]), array([-0.07387759]), array([2.22118765]), array([2.40513924]), array([2.23124638]), array([0.07302319]), array([2.92603465]), array([2.61677618]), array([1.31904928]), array([3.06104234]), array([1.43126243]), array([3.30364219]), array([1.87079857]), array([2.24279547]), array([0.93554939]), array([3.30159587]), array([1.88162004]), array([3.11363885]), array([2.33097734]), array([2.18847199]), array([2.63503215]), array([2.29002493]), array([2.23885703]), array([1.32564487]), array([0.68820278]), array([3.34092172]), array([2.61092338]), array([2.31291204]), array([2.78858101]), array([3.25253628]), array([3.34640278]), array([2.30778681]), array([0.66139714]), array([2.40512247]), array([1.77934397]), array([2.60068591]), array([3.18012384]), array([0.92640238]), array([0.10214732]), array([2.54701115]), array([2.94217147]), array([2.64033364]), array([2.81642018]), array([2.41560899]), array([2.2455497]), array([2.87632377]), array([1.84439973]), array([1.29044952]), array([3.26185419]), array([2.9431437]), array([2.274668]), array([3.22759915]), array([3.15460051]), array([2.2711149]), array([3.26110075]), array([2.47230876]), array([3.39445093]), array([1.85953527]), array([2.52642966]), array([0.69536233]), array([0.9004195]), array([2.23274087]), array([2.19997096]), array([3.19563957]), array([1.38172522]), array([1.47568247]), array([1.81516672]), array([3.14184648]), array([2.90003568]), array([2.6902341]), array([2.92964374]), array([2.5613769]), array([2.39886473]), array([3.3654762]), array([0.20852578]), array([2.68946952]), array([2.38517783]), array([0.87492176]), array([1.8748044]), array([2.6770369]), array([2.67170539]), array([2.19839928]), array([2.5661955]), array([1.95661801]), array([2.94148772]), array([2.23521452]), array([2.95265013]), array([2.51179872]), array([1.84889257]), array([2.67009922]), array([2.64320745]), array([2.43427777]), array([2.70037214]), array([1.38881691]), array([1.85439845]), array([2.67286798]), array([2.32274026]), array([-0.03386731]), array([2.92998617]), array([2.99361735]), array([2.21206492]), array([2.63264938]), array([2.57386959]), array([2.08987924]), array([3.50187712]), array([2.16383639]), array([2.5653843]), array([2.73652067]), array([2.96916027]), array([2.70147131]), array([2.72559935]), array([2.20225838]), array([3.37613788]), array([2.68623278]), array([2.95572701]), array([3.18204575]), array([3.35360164]), array([1.82630831]), array([2.19030488]), array([2.96945759]), array([3.38837642]), array([2.50397919]), array([0.89207535]), array([2.15704412]), array([3.36040059]), array([2.68264251]), array([2.76230492]), array([3.0617367]), array([2.64066478]), array([0.04531955]), array([2.11525426]), array([2.25844309]), array([3.34692465]), array([3.23881272]), array([1.81474344]), array([2.76232535]), array([2.70908829]), array([2.56502428]), array([2.25334854]), array([1.93957904]), array([2.95183525]), array([2.6572246]), array([2.29755984]), array([2.74513201]), array([0.71724946]), array([3.25227089]), array([2.3688655]), array([0.68341802]), array([0.9174193]), array([1.87932626]), array([2.53710691]), array([2.53967244]), array([3.22817318]), array([2.44705238]), array([2.59520094]), array([2.22120391]), array([2.67923538]), array([2.84477172]), array([3.01603312]), array([-0.05094176]), array([2.85992632]), array([1.86043314]), array([2.2003503]), array([1.44100055]), array([2.66467527]), array([3.28863267]), array([1.98209413]), array([1.40278989]), array([2.99191355]), array([1.97433985]), array([2.86185194]), array([2.93407309]), array([2.25598601]), array([2.80148612]), array([2.56670573]), array([-0.08807237]), array([3.11522368]), array([2.25119723]), array([2.97684569]), array([2.89815613]), array([2.25446189]), array([2.91936757]), array([3.11682385]), array([2.21353523]), array([2.69220141]), array([2.22920813]), array([0.89775123]), array([2.45044239]), array([2.6766948]), array([2.65486749]), array([2.62077788]), array([2.64430348]), array([2.7017472]), array([0.68094479]), array([2.60794629]), array([3.38519711]), array([2.26812525]), array([0.6737507]), array([2.63272649]), array([3.34585088]), array([2.23728475]), array([2.20511977]), array([2.61485516]), array([2.73082795]), array([1.43492998]), array([2.77616965]), array([2.55552152]), array([2.5245686]), array([0.92635435]), array([2.20704527]), array([2.31878061]), array([2.63117614]), array([0.70187559]), array([1.95731688]), array([2.55894887]), array([-0.01935034]), array([2.91055106]), array([3.43817926]), array([2.32778281]), array([3.15266741]), array([2.66484033]), array([2.55234943]), array([2.69515117]), array([1.86923751]), array([2.91810435]), array([1.80371935]), array([2.58514202]), array([2.58834777]), array([1.86567316]), array([2.59421167]), array([2.44353311]), array([0.65005841]), array([2.55348299]), array([2.23620309]), array([2.65424248]), array([1.36821488]), array([1.81148456]), array([0.6492143]), array([2.38266112]), array([2.92797465]), array([3.45084386]), array([2.3264356]), array([1.33437107]), array([3.36955738]), array([3.39957315]), array([0.67957231]), array([0.70500655]), array([2.65704438]), array([2.10029414]), array([3.30059996]), array([2.27277631]), array([2.90837797]), array([1.97950287]), array([1.85387178]), array([1.89242372]), array([2.77199896]), array([2.42056129]), array([1.835994]), array([2.61407129]), array([2.69139325]), array([1.99566136]), array([1.89179638]), array([3.3181546]), array([2.21462689]), array([2.47288956]), array([3.16904917]), array([2.82391452]), array([2.83750226]), array([1.47308139]), array([1.86616277]), array([2.9654801]), array([3.33097855]), array([3.3103939]), array([1.86599144]), array([1.85011243]), array([2.6661394]), array([2.31712745]), array([1.81916307]), array([2.55557008]), array([2.73478827]), array([1.81607915]), array([2.57802701]), array([0.05357303]), array([2.29542852]), array([2.51394098]), array([2.81811697]), array([2.26209443]), array([2.19809773]), array([0.91288621]), array([1.42525489]), array([2.33363303]), array([2.56933174]), array([2.88763333]), array([2.35128556]), array([2.24648254]), array([2.7126775]), array([1.97120584]), array([2.4059579]), array([2.64413666]), array([3.20205042]), array([2.92310818]), array([3.25175999]), array([2.2491062]), array([1.84434197]), array([1.87717958]), array([2.65571923]), array([2.57956202]), array([2.9413765]), array([2.51156457]), array([1.44289058]), array([2.91205518]), array([2.60040771]), array([1.83904932]), array([2.86764769]), array([1.50401311]), array([2.57581901]), array([2.66441922]), array([2.67557404]), array([2.23156836]), array([2.39287414]), array([2.91964402]), array([2.24650851]), array([1.87018744]), array([3.31358569]), array([3.21628495]), array([1.8712612]), array([1.98842976]), array([2.84182946]), array([1.82554507]), array([3.01365342]), array([0.86540944]), array([2.29535813]), array([2.63133804]), array([3.33484077]), array([1.3844871]), array([2.90760807]), array([1.85116898]), array([2.29100175]), array([1.95253646]), array([2.62966489]), array([2.90158716]), array([2.54884039]), array([2.58489561]), array([1.89121518]), array([2.53119339]), array([2.30580691]), array([2.63266688]), array([2.73735042]), array([2.60087176]), array([2.23287787]), array([2.67807403]), array([2.19093846]), array([2.6663629]), array([3.23194132]), array([3.46183658]), array([3.30747095]), array([2.88359481]), array([2.52694309]), array([2.58622523]), array([2.41998629]), array([2.26364794]), array([1.49034761]), array([1.300573]), array([2.15081311]), array([2.40906219]), array([1.84143151]), array([2.5642723]), array([1.85242181]), array([0.68497814]), array([2.93726177]), array([3.07831743]), array([2.83142185]), array([2.54683971]), array([2.63553786]), array([2.64305549]), array([1.97128952]), array([2.40439065]), array([0.67543257]), array([2.66910953]), array([3.26328167]), array([0.68610218]), array([2.91143687]), array([1.99465827]), array([3.34411201]), array([1.32692162]), array([2.69783851]), array([1.81924956]), array([2.27731662]), array([2.65982116]), array([0.21330943]), array([2.24111762]), array([2.34974346]), array([2.23656893]), array([2.37142257]), array([3.36852691]), array([2.80987306]), array([2.81462405]), array([0.9520636]), array([3.33964223]), array([3.42911349]), array([3.3779471]), array([2.9488441]), array([2.54858071]), array([2.66232031]), array([1.29356432]), array([2.94827059]), array([3.37330419]), array([2.63144462]), array([3.25249861]), array([2.22766157]), array([2.29571479]), array([2.78985442]), array([0.70429222]), array([2.10999924]), array([3.36447636]), array([2.74483587]), array([1.95056949]), array([2.20095255]), array([1.81782776]), array([2.35692892]), array([2.35878703]), array([2.21199543]), array([2.42838507]), array([2.29850918]), array([2.95081778]), array([3.43368898]), array([2.54884018]), array([2.87696937]), array([0.68698377]), array([2.22664222]), array([0.89503481]), array([1.96788044]), array([2.3181568]), array([1.82387133]), array([1.82988873]), array([2.19336672]), array([2.633678]), array([2.53494358]), array([3.07516085]), array([2.66186313]), array([2.5300998]), array([1.3685682]), array([2.55430636]), array([1.88084634]), array([2.52909878]), array([1.34712754]), array([2.40636113]), array([1.44998919]), array([0.92081718]), array([2.27835943]), array([3.33643343]), array([2.64897657]), array([2.81076614]), array([2.6326389]), array([2.28048648]), array([2.96944067]), array([1.34358918]), array([2.89415789]), array([2.67550534]), array([2.1934553]), array([2.9330772]), array([3.22885281]), array([2.25086712]), array([1.8743134]), array([2.40762893]), array([2.63222727]), array([2.57750463]), array([-0.03044833]), array([1.78620829]), array([2.27357102]), array([1.99026557]), array([1.34787462]), array([3.1003517]), array([2.21614849]), array([2.77853792]), array([0.65899259]), array([1.86880781]), array([2.41429069]), array([3.00213884]), array([0.94425665]), array([1.85859971]), array([3.33216107]), array([3.03950042]), array([2.39433888]), array([3.1137687]), array([0.65949095]), array([2.91374007]), array([2.25048173]), array([2.53129388]), array([2.63794186]), array([2.52830376]), array([3.01423717]), array([2.96379989]), array([2.64450257]), array([2.47309988]), array([2.23352128]), array([3.34792525]), array([2.14975487]), array([2.19729553]), array([2.39035359]), array([3.38835914]), array([2.17205101]), array([1.95621105]), array([1.97898569]), array([1.81901788]), array([1.9910726]), array([1.95029862]), array([2.62510839]), array([3.11392443]), array([2.2572498]), array([3.07247839]), array([2.00738644]), array([2.83745349]), array([1.30215801]), array([2.95439659]), array([2.80418756]), array([2.58361036]), array([2.82504128]), array([2.39256268]), array([3.2144444]), array([2.93470396]), array([2.64943663]), array([0.70303994]), array([2.39740104]), array([1.36493539]), array([2.64676626]), array([1.3506207]), array([3.14732565]), array([1.34731007]), array([1.95803371]), array([0.88596808]), array([0.70154096]), array([1.33122081]), array([2.86892137]), array([2.30969823]), array([2.89478896]), array([3.36702146]), array([1.82580034]), array([2.2482288]), array([2.69131222]), array([0.92983761]), array([2.20360834]), array([2.17766836]), array([2.59678114]), array([2.23757884]), array([1.46726565]), array([2.39607507]), array([3.05941455]), array([2.83621731]), array([2.88217556]), array([1.78665572]), array([2.14748745]), array([2.22250981]), array([2.57412114]), array([2.27203519]), array([3.05358828]), array([1.46808884]), array([0.86825077]), array([2.64114863]), array([2.63799621]), array([2.21863502]), array([2.90231834]), array([1.95064895]), array([2.97725134]), array([3.36766199]), array([3.16517759]), array([2.7067857]), array([2.40453791]), array([2.62540369]), array([0.69944966]), array([1.51379133]), array([2.98961367]), array([2.22925853]), array([3.30659422]), array([2.65842667]), array([2.14492074]), array([0.90359113]), array([2.81635023]), array([3.20691844]), array([1.89904836]), array([2.78532342]), array([2.25763029]), array([3.32750704]), array([2.84960622]), array([2.86999529]), array([2.84328296]), array([1.9710524]), array([2.29597126]), array([3.26806894]), array([2.8222866]), array([2.56021087]), array([3.42992338]), array([1.87355187]), array([2.40762185]), array([2.71306651]), array([2.22389117]), array([2.21324391]), array([2.89790665]), array([1.41069758]), array([1.84567118]), array([2.5988197]), array([2.81955134]), array([2.74591948]), array([2.62327886]), array([2.16722564]), array([2.67988849]), array([1.36370272]), array([1.49773356]), array([2.6734951]), array([2.70305477]), array([1.96525713]), array([3.41556079]), array([2.66479134]), array([2.91065647]), array([3.38110323]), array([2.24989736]), array([1.3278115]), array([0.91606508]), array([2.57056086]), array([1.97851438]), array([2.62927588]), array([2.60751753]), array([2.43744183]), array([-0.02834671]), array([1.37829602]), array([3.01956756]), array([2.89183307]), array([2.23670392]), array([0.67357647]), array([2.14725312]), array([3.0317664]), array([1.42742676]), array([2.65741614]), array([2.3096187]), array([0.6926211]), array([2.58580488]), array([2.67936288]), array([3.27283896]), array([1.36912182]), array([2.50808361]), array([1.3236749]), array([0.65726122]), array([1.97589561]), array([1.3361491]), array([2.69356567]), array([2.43066587]), array([3.38351712]), array([1.39645841]), array([2.59220194]), array([1.4416596]), array([1.48855999]), array([2.42601146]), array([3.24017646]), array([3.0521087]), array([2.60155294]), array([2.22838539]), array([2.3801227]), array([0.68988041]), array([2.61483467]), array([1.81484835]), array([3.19632264]), array([2.55415415]), array([2.78529154]), array([2.63583852]), array([0.68184751]), array([2.38329772]), array([2.60693312]), array([0.93203363]), array([1.95773167]), array([0.19593837]), array([1.82708777]), array([2.55131783]), array([2.10607877]), array([1.87934698]), array([3.24694518]), array([3.28477755]), array([3.35097073]), array([2.22970035]), array([1.48131699]), array([3.10273208]), array([2.56732669]), array([3.10711988]), array([3.37093859]), array([2.99268957]), array([1.8413651]), array([2.77063538]), array([2.51120211]), array([2.00921997]), array([3.34341201]), array([0.92928437]), array([2.41320991]), array([1.93330856]), array([3.12833141]), array([2.55519339]), array([3.36876517]), array([1.82925294]), array([-0.16598358]), array([2.61593523]), array([2.51907397]), array([2.15547325]), array([2.88225346]), array([3.36753667]), array([2.84611016]), array([2.24299654]), array([1.47193478]), array([2.77724075]), array([1.98386792]), array([2.1478745]), array([0.66376108]), array([1.82166825]), array([2.59370449]), array([3.18370649]), array([-0.14699063]), array([1.2727346]), array([3.36723937]), array([2.54548497]), array([3.25351084]), array([2.98272325]), array([2.46478322]), array([2.6781064]), array([-0.18779566]), array([3.143145]), array([2.67634054]), array([2.97731182]), array([2.92329986]), array([3.23836097]), array([2.29073967]), array([2.87308754]), array([3.29113431]), array([2.68922998]), array([2.29748337]), array([0.10793798]), array([1.78244028]), array([0.66211319]), array([2.22420828]), array([1.8561018]), array([3.26834729]), array([0.69353318]), array([2.76692603]), array([2.65760884]), array([2.24757567]), array([2.94673976]), array([1.97650402]), array([2.53416075]), array([2.90639308]), array([1.88209366]), array([1.84658996]), array([3.40844811]), array([2.08668824]), array([0.13343809]), array([2.25538627]), array([2.52243136]), array([2.28025074]), array([2.8262008]), array([1.82794879]), array([3.35207163]), array([2.83289174]), array([1.76991345]), array([2.77724706]), array([2.35035957]), array([3.23651289]), array([2.64504028]), array([1.9113937]), array([3.49128675]), array([3.38106212]), array([2.55524176]), array([1.8185359]), array([2.53310283]), array([3.33571865]), array([2.00093054]), array([1.8399138]), array([1.9491674]), array([2.84504024]), array([2.59612404]), array([1.96033273]), array([2.99909608]), array([1.84626314]), array([3.11566106]), array([2.64412479]), array([2.55850866]), array([0.65943431]), array([2.9183933]), array([3.16483661]), array([2.73322846]), array([1.2912737]), array([0.93903756]), array([1.38566601]), array([0.9084734]), array([1.94747379]), array([2.23970966]), array([2.88576023]), array([2.21124959]), array([2.67694885]), array([-0.13776513]), array([3.13566877]), array([2.57849961]), array([2.31592181]), array([2.90004627]), array([1.91890732]), array([1.81174486]), array([2.11989962]), array([2.67361601]), array([1.81896668]), array([1.96644459]), array([2.83737484]), array([2.49898847]), array([1.87580943]), array([1.88611451]), array([2.50141407]), array([2.63572445]), array([0.65199865]), array([2.73332475]), array([2.43079783]), array([2.62597794]), array([2.27298171]), array([3.30311388]), array([1.8570834]), array([3.13421984]), array([0.93974926]), array([2.53312053]), array([3.45156176]), array([2.45655911]), array([3.11693048]), array([0.90518561]), array([2.91841816]), array([0.69432693]), array([2.76063489]), array([3.3310997]), array([0.70300823]), array([1.33821138]), array([3.32035995]), array([2.89743023]), array([2.8854771]), array([2.62188355]), array([2.88183405]), array([0.91936655]), array([2.62129693]), array([0.90033206]), array([0.90650612]), array([2.44717326]), array([1.47060557]), array([-0.10058373]), array([2.90236102]), array([2.09416132]), array([3.27407154]), array([1.80880647]), array([2.93167832]), array([2.67218908]), array([2.87709744]), array([1.87260076]), array([2.75599559]), array([1.8073936]), array([2.2060767]), array([2.42854947]), array([2.41972374]), array([1.82979361]), array([3.37300266]), array([2.7775617]), array([2.53946806]), array([3.006116]), array([0.66992338]), array([1.86454191]), array([3.27003289]), array([1.79729876]), array([2.66027466]), array([3.13854828]), array([2.41060066]), array([2.80252712]), array([2.68224051]), array([2.21421988]), array([3.35183456]), array([1.76603166]), array([2.13081961]), array([2.87841711]), array([3.37708712]), array([3.23961148]), array([3.36515928]), array([2.52593609]), array([3.16540913]), array([1.81642939]), array([2.88694754]), array([2.61819615]), array([1.8546189]), array([2.42408602]), array([3.07550659]), array([2.80948739]), array([2.66349551]), array([2.25665498]), array([0.92465787]), array([2.93702394]), array([2.59501441]), array([2.62397825]), array([2.61661286]), array([2.90984973]), array([2.70119669]), array([2.59841179]), array([3.0362974]), array([2.6904091]), array([2.58379037]), array([2.65667292]), array([1.93354316]), array([2.95467784]), array([2.54534866]), array([1.38277445]), array([-0.20089744]), array([2.56929732]), array([2.91355313]), array([1.98904019]), array([0.70245933]), array([2.6556412]), array([3.36020804]), array([2.42346427]), array([3.0303075]), array([2.60918891]), array([3.16346383]), array([0.69088001]), array([2.77380496]), array([1.26031446]), array([3.40604639]), array([1.78189881]), array([2.40307417]), array([2.55875299]), array([0.9190632]), array([2.20062133]), array([2.59760668]), array([2.93416908]), array([2.96826932]), array([3.37671817]), array([2.6097581]), array([0.91751658]), array([1.87438984]), array([1.35202418]), array([2.25251867]), array([3.34568097]), array([3.27650551]), array([2.87574883]), array([-0.12113432]), array([3.33975709]), array([1.89065826]), array([3.07606879]), array([2.17156514]), array([2.65614303]), array([-0.22936581]), array([2.80403505]), array([2.76093812]), array([1.48381981]), array([0.68083864]), array([2.56618572]), array([2.25329545]), array([2.7838306]), array([2.11886936]), array([1.30471028]), array([2.44591291]), array([2.60147351]), array([2.15071409]), array([1.84925283]), array([1.8347595]), array([2.42619547]), array([3.30868542]), array([2.82164929]), array([2.29307501]), array([2.01764877]), array([2.39365838]), array([2.34070797]), array([2.57849263]), array([2.61406097]), array([2.33695168]), array([-0.04182062]), array([2.23913247]), array([3.28718939]), array([2.37405831]), array([3.06074039]), array([1.87585843]), array([2.55713041]), array([2.68292912]), array([2.5702174]), array([2.74832461]), array([2.39133768]), array([0.69015403]), array([2.60132567]), array([3.00465693]), array([2.59944618]), array([2.49667209]), array([0.92006522]), array([3.07537396]), array([2.70375495]), array([2.22561921]), array([2.5323146]), array([2.54984263]), array([2.95463741]), array([2.28596975]), array([3.37590085]), array([1.27944274]), array([2.68457162]), array([2.93856671]), array([2.23880896]), array([2.48160172]), array([2.23364556]), array([0.91450742]), array([2.58502514]), array([2.22731133]), array([2.75700863]), array([2.65048063]), array([2.16543714]), array([2.18880287]), array([1.93397528]), array([0.91276026]), array([0.68595669]), array([2.17454307]), array([2.96337173]), array([2.42595983]), array([1.41147092]), array([2.57125194]), array([1.43559285]), array([3.22495427]), array([3.11483478]), array([1.395882]), array([2.55242122]), array([1.36937525]), array([2.90762288]), array([2.59389351]), array([-0.20074275]), array([2.93291392]), array([-0.00824773]), array([0.86696802]), array([2.98151804]), array([3.21785874]), array([2.54847291]), array([2.87345415]), array([0.68207993]), array([2.69601129]), array([3.26078486]), array([2.97819608]), array([2.90721837]), array([2.71278421]), array([2.5911173]), array([2.71897667]), array([2.22046609]), array([1.99029754]), array([2.24240072]), array([0.69822283]), array([2.68957715]), array([2.726901]), array([2.73195871]), array([2.76118141]), array([2.76570973]), array([0.69134455]), array([1.89069549]), array([2.26177899]), array([2.90413262]), array([2.94037381]), array([3.04171886]), array([3.07580398]), array([2.35809053]), array([2.18846225]), array([2.14572125]), array([3.03226764]), array([2.16977941]), array([2.15525524]), array([3.17933703]), array([2.88666668]), array([1.80931129]), array([2.66152097]), array([3.11406656]), array([1.35633363]), array([3.25877939]), array([2.54392177]), array([2.37661895]), array([2.26514756]), array([2.93930328]), array([1.90539049]), array([2.98129071]), array([2.31964658]), array([2.66959269]), array([2.19123364]), array([2.5553076]), array([2.84502841]), array([3.44422552]), array([2.88224018]), array([2.18515432]), array([2.86402532]), array([2.28657312]), array([3.14332989]), array([2.24043497]), array([1.83873568]), array([1.86122121]), array([2.20302452]), array([2.39449876]), array([3.38623907]), array([2.20267499]), array([2.21754402]), array([2.63272876]), array([3.21356111]), array([0.68857996]), array([3.13280261]), array([2.18160682]), array([3.38246344]), array([3.47542109]), array([2.60077115]), array([3.34510802]), array([2.52727996]), array([2.71608422]), array([1.79802548]), array([1.84132776]), array([2.86315418]), array([2.63978413]), array([2.87177959]), array([3.09512891]), array([2.19757963]), array([1.83826188]), array([2.82556702]), array([0.70210044]), array([2.5352353]), array([0.71855521]), array([3.19907437]), array([3.42184773]), array([3.25900983]), array([2.55944515]), array([3.12066338]), array([2.7997864]), array([3.01482935]), array([2.8918824]), array([2.63329218]), array([2.31251192]), array([2.35669542]), array([1.88183989]), array([2.65913024]), array([2.60812962]), array([1.37906039]), array([2.69054777]), array([2.28218965]), array([1.96265778]), array([0.69059091]), array([2.5366055]), array([2.69923079]), array([3.33060449]), array([2.91545027]), array([2.98551055]), array([3.08303757]), array([3.33020355]), array([1.27492997]), array([2.82973049]), array([1.87894277]), array([1.82402296]), array([1.9105568]), array([1.9231477]), array([3.34294481]), array([0.91976647]), array([3.32067121]), array([2.8070283]), array([1.45805073]), array([2.64265981]), array([2.96198001]), array([2.397693]), array([2.80569749]), array([3.28924437]), array([3.16676976]), array([3.3491606]), array([2.19953848]), array([2.85084209]), array([2.20454569]), array([-0.15943055]), array([1.92996557]), array([1.83525795]), array([2.91063195]), array([0.68705668]), array([0.69453371]), array([0.68563969]), array([-0.05529738]), array([2.34912447]), array([2.0081377]), array([-0.01331308]), array([2.69638518]), array([1.82013633]), array([1.37761878]), array([2.27063437]), array([2.52548031]), array([2.60086496]), array([0.72258954]), array([2.59647801]), array([1.92146892]), array([1.8078223]), array([2.53610908]), array([1.93483028]), array([1.96297167]), array([2.98229244]), array([2.36925245]), array([2.206129]), array([1.90565951]), array([2.5129822]), array([1.36841916]), array([3.21385625]), array([2.83677505]), array([1.82006107]), array([2.54298081]), array([2.60016672]), array([2.68913612]), array([1.8059556]), array([3.26518212]), array([3.28194644]), array([2.43832967]), array([2.61143991]), array([2.37944626]), array([2.72422212]), array([2.58647247]), array([1.42973839]), array([3.0012113]), array([2.60051596]), array([2.92224336]), array([2.32743288]), array([3.0421934]), array([3.20566067]), array([1.9111458]), array([1.86806515]), array([2.59518959]), array([3.3208553]), array([3.29248773]), array([-0.03557527]), array([2.77587164]), array([2.89633693]), array([1.95642002]), array([2.83670691]), array([3.25456522]), array([2.66581992]), array([2.64353368]), array([1.77867623]), array([3.33060255]), array([2.38393594]), array([1.35028216]), array([2.93964766]), array([3.04012426]), array([2.50040111]), array([2.83921154]), array([3.01640553]), array([2.60960346]), array([1.80844331]), array([1.81306511]), array([2.26341587]), array([2.6981965]), array([3.37743808]), array([2.93282077]), array([2.9208144]), array([1.44633169]), array([0.19246659]), array([3.07938892]), array([1.46293629]), array([2.66039582]), array([2.97454411]), array([2.41866687]), array([3.21092969]), array([2.37047741]), array([2.96492815]), array([1.99904584]), array([0.08104997]), array([3.34675807]), array([-0.02304826]), array([2.75190559]), array([2.9069401]), array([3.13085815]), array([1.82995919])]
Testing true: [tensor([0.8578], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8015], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8016], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9256], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8014], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.7949], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8007], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8015], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8005], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8005], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8020], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9025], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9023], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9024], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7197], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9256], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8007], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9291], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.7197], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8020], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9291], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.8574], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8920], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9159], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8008], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9023], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8020], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.7197], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.7995], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8013], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.7996], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9021], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8003], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8018], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8012], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.7986], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9025], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9343], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.7197], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9159], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8007], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.7197], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.8011], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8013], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.7198], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9000], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8921], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.6666], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9026], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.8021], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9615], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.8578], dtype=torch.float64), tensor([0.9257], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9346], dtype=torch.float64), tensor([0.9317], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9643], dtype=torch.float64), tensor([0.9166], dtype=torch.float64), tensor([0.7945], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9411], dtype=torch.float64), tensor([0.9444], dtype=torch.float64), tensor([0.9292], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.8571], dtype=torch.float64), tensor([0.9035], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.8001], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8023], dtype=torch.float64), tensor([0.9286], dtype=torch.float64), tensor([0.9523], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.9160], dtype=torch.float64), tensor([0.9500], dtype=torch.float64), tensor([0.8750], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9666], dtype=torch.float64), tensor([0.4998], dtype=torch.float64), tensor([0.9319], dtype=torch.float64), tensor([0.9487], dtype=torch.float64), tensor([0.9583], dtype=torch.float64), tensor([0.8578], dtype=torch.float64)]
real true y: [[0.47933536]
 [0.39497041]
 [0.39521696]
 [0.33500164]
 [0.41510519]
 [0.56558515]
 [0.84527697]
 [0.56211337]
 [0.32740554]
 [0.47899738]
 [0.47900547]
 [0.47912786]
 [0.84401948]
 [0.41978961]
 [0.84534281]
 [0.33720814]
 [0.5678679 ]
 [0.47928948]
 [0.8345806 ]
 [0.33793467]
 [0.3392247 ]
 [0.83491806]
 [0.84533563]
 [0.47879542]
 [0.47872557]
 [0.3365703 ]
 [0.56558515]
 [0.32867865]
 [0.83494666]
 [0.41978961]
 [0.56213398]
 [0.47831412]
 [0.83494102]
 [0.33755156]
 [0.5678679 ]
 [0.84031884]
 [0.840417  ]
 [0.84626692]
 [0.41559829]
 [0.565066  ]
 [0.83492583]
 [0.83494053]
 [0.39201183]
 [0.47839002]
 [0.39423077]
 [0.83491207]
 [0.84833181]
 [0.5678679 ]
 [0.83496995]
 [0.56725084]
 [0.83496199]
 [0.83496995]
 [0.41880342]
 [0.45983665]
 [0.41978961]
 [0.84532485]
 [0.84720061]
 [0.33829966]
 [0.5678679 ]
 [0.33824331]]
real pred y: [[1.01197501]
 [0.83573349]
 [0.82597065]
 [1.39198874]
 [0.83692686]
 [0.90949045]
 [0.98693619]
 [0.88231925]
 [1.42617895]
 [1.06933423]
 [1.26580591]
 [0.991384  ]
 [0.95940529]
 [0.83444742]
 [0.95709142]
 [1.40049358]
 [0.89215126]
 [1.00019406]
 [2.03406808]
 [1.28294106]
 [1.49592907]
 [2.06861775]
 [1.01974143]
 [1.15086562]
 [1.05492483]
 [1.25369921]
 [0.87732677]
 [1.24967145]
 [2.15074404]
 [0.82933786]
 [0.9047107 ]
 [0.98245056]
 [2.17856279]
 [1.29737909]
 [0.89157927]
 [0.94343175]
 [0.98899855]
 [0.97496138]
 [0.83145163]
 [0.91971923]
 [1.69911155]
 [2.16316313]
 [0.83931082]
 [1.18612354]
 [0.83646279]
 [1.73821091]
 [0.9987279 ]
 [0.89684362]
 [1.93064452]
 [0.89405267]
 [1.88038485]
 [1.97938079]
 [0.84204453]
 [1.04782129]
 [0.83036614]
 [0.9804286 ]
 [0.96569392]
 [1.37124016]
 [0.90419779]
 [1.39503931]]
real cor: 0.09935523562781243
real p: 0.45007820102640284
training loss [0.33937847577698155, 0.32386133441044784, 0.32188113917568123, 0.32252583436807825, 0.32099460569748206, 0.31983343972758277, 0.3194978132228895, 0.3192736655890953, 0.31866389708443005, 0.3188195488496485, 0.3185303263068427, 0.3184861052266242, 0.3181319084882042, 0.31808915781683134, 0.31815375715912386, 0.3180096561129013, 0.31795021393171014, 0.31795978997889535, 0.31787252730197696, 0.3178234351320977, 0.3177731390491909, 0.31779686359152887, 0.31782434568134066, 0.31777431677241263, 0.31773950701384696, 0.31770082269858013, 0.3176807452768665, 0.3177075981426686, 0.31765552871905817, 0.3176635736530338, 0.3177068840276421, 0.31761371916372094, 0.3176523151574703, 0.31763552099193065, 0.3176692369023254, 0.3175973191372769, 0.31760158297396435, 0.3175713108088546, 0.31762980020026527, 0.3175871775172776, 0.31761564657600383, 0.31762120301402214, 0.3176001324047523, 0.3175725492541401, 0.31756633280265784, 0.3176132364177495, 0.3175493471656023, 0.31760295199503324, 0.3175890532799612, 0.31756630353144744]
validation loss: [0.3185644942111368, 0.31743628015542996, 0.32027961860065035, 0.3172725261613699, 0.31734018826288113, 0.3171318027424365, 0.31679667724935057, 0.31662912222036926, 0.31681784975960053, 0.33079497273620745, 0.3163122622197672, 0.317677903171871, 0.31626455276410603, 0.3164174109341443, 0.3164536688846397, 0.31844624100996605, 0.3173240523866176, 0.31645930271228484, 0.3160100387860327, 0.31604848539542335, 0.3159750312804504, 0.31624310593093424, 0.31634381997405203, 0.3161577416459615, 0.31608582687245573, 0.31610724325792505, 0.31615139402144915, 0.31583166108751604, 0.3157708180279313, 0.3156704556037689, 0.3159650423814379, 0.3159587687927154, 0.31589923482672844, 0.3158474882856435, 0.3164464506147065, 0.3159003109785957, 0.31602615653875843, 0.3158789211634838, 0.31589091174114386, 0.31596638889588313, 0.3160648650917774, 0.31569819764143103, 0.316060595952301, 0.3158670206948183, 0.31568685797236085, 0.31581579217387845, 0.316137417285588, 0.31579763830764457, 0.31577670183529644, 0.31580361046712335]
testing loss: [0.3182120742197527]
training cor: [0.7391448876670926, 0.8055965732668733, 0.8452331974209798, 0.8303972099385082, 0.8665130672093193, 0.9010497168226385, 0.9130217942982662, 0.9232433839484182, 0.9451902328728284, 0.9405531774852528, 0.949157416218315, 0.9534563036972004, 0.9676486452998306, 0.9689116672111703, 0.9658455579239642, 0.9720527135931625, 0.9754643274181372, 0.9734793126244418, 0.978607910120005, 0.9794008586500211, 0.9819924266713711, 0.9823695428642055, 0.98198745557825, 0.9836716950296204, 0.9832896831747961, 0.9857337618633498, 0.9858342741634343, 0.9844782885745689, 0.9872400756888706, 0.9864180974454575, 0.9874181001889331, 0.9879109533670493, 0.9878630071037284, 0.9880116026370066, 0.9857086098456387, 0.9890282786934569, 0.989770038338428, 0.9895207348569561, 0.9889886357218991, 0.9902146931473611, 0.9901754674542919, 0.9901294206813966, 0.9909553509178747, 0.9902117468818173, 0.9904085703532822, 0.989361864903466, 0.9908202946966761, 0.9894986577387053, 0.9904698771066136, 0.9905385710402899]
validation cor: [0.9209703882616045, 0.9573286415902684, 0.847918888659922, 0.9533505559521025, 0.959651356871681, 0.9654099225882063, 0.9699815401155184, 0.9659219008937022, 0.9770770534765757, 0.9554501045630623, 0.9801525864305158, 0.9772410965570033, 0.9745372112781107, 0.9809234231188398, 0.9823043866815317, 0.8922495778356196, 0.9603497748737625, 0.9769067008228911, 0.9798421726302247, 0.9833890529842455, 0.9841777938833216, 0.9834196481366665, 0.9826032293653617, 0.985305619266544, 0.9853325546581466, 0.9909331891788148, 0.9885802419769425, 0.9894245947757323, 0.9887257751240012, 0.9915914745853784, 0.986660719772754, 0.9910392183019764, 0.9878140925825888, 0.9920012729288531, 0.9797974701218944, 0.9913565848077854, 0.9846090553939371, 0.9887182481692496, 0.9882506959439372, 0.9910776223255368, 0.9769843771321658, 0.9923270464120838, 0.9820289333134818, 0.9913605218927898, 0.9927797857624846, 0.9907606703499435, 0.9892475535241355, 0.9905921664494973, 0.9931624370250548, 0.9923457099042003]
testing cor: [0.991441244038325]
training p: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
validation p: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
testing p: [0.0]
